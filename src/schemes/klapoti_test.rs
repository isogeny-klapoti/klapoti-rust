use crate::quaternion::quadratic_order::{QuadraticOrder, QuadraticOrderEl};
use crate::util::Big;
use crate::{ec64, ec128, ec256, ec512, ec768, ec1024, ec1536, ec2048, util::bytes_from_str};

pub fn params64() {
    // p = 1243860333603982568026641440523014635142548663400435746517610765710004322303

    let A = ec64::Fq::new(
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "341117813776361781710673256024825597084351074352969561483536087523396891922",
        )),
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "0",
        )),
    );
    let EA = ec64::Curve::new(&A);

    let Px = ec64::Fq::new(
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "774992979040959411587186382463472981515318413313342904274348538670941928079",
        )),
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "599609301816222826024617132058874045866505668259946001469249023670731582987",
        )),
    );
    let Py = ec64::Fq::new(
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "959480993647696772045408638188184731265597371389581386684349796345325403592",
        )),
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "751716867887175890351697484815208739406059908531366079963983874772292668591",
        )),
    );

    let P = ec64::Point {
        X: Px,
        Y: Py,
        Z: ec64::Fq::ONE,
    };

    let Qx = ec64::Fq::new(
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "1093976725365048934025092065715711376919217373852870676371180522443574594133",
        )),
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "152534727622692073682349350069043949623145859976073381971302176499210730554",
        )),
    );
    let Qy = ec64::Fq::new(
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "619376060490082509874208229012517388985734353695600786355732377444016596441",
        )),
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "1005330873230603120535557276737346015771554396266387138792587360159045278614",
        )),
    );

    let Q = ec64::Point {
        X: Qx,
        Y: Qy,
        Z: ec64::Fq::ONE,
    };

    let omPx = ec64::Fq::new(
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "574882729466792599913246818975264483145925527398465722552882750137730043823",
        )),
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "637833225352907989291080415585366015046246470731548065399681215828609093107",
        )),
    );
    let omPy = ec64::Fq::new(
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "684907205038467695844707328967600159076292755257386421856074210945113089148",
        )),
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "1090145556871223394842873612853548356030667863875840748562748150702300735511",
        )),
    );

    let omP = ec64::Point {
        X: omPx,
        Y: omPy,
        Z: ec64::Fq::ONE,
    };

    let omQx = ec64::Fq::new(
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "79270555968304868288023408105423873339883271512093784337977632890835291794",
        )),
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "313262303974503589064191758927959985514535120847984378705450654371731411830",
        )),
    );
    let omQy = ec64::Fq::new(
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "1115422090242512157652969947396116995918836554629322115993304237671689133642",
        )),
        &ec64::Fp::decode_reduce(&bytes_from_str(
            "106422230167465371016056365542667880022266562509141874660780323990100798846",
        )),
    );

    let omQ = ec64::Point {
        X: omQx,
        Y: omQy,
        Z: ec64::Fq::ONE,
    };

    let gen_denom = 2.big(); // quadratic order is generated by 1 and (1 + theta)/gen_denom.
    let field_disc = -11.big();
    let order_conductor = 1294981343.big();
    let quadratic_order =
        QuadraticOrder::new(field_disc.clone(), gen_denom, order_conductor.clone());

    let omega = QuadraticOrderEl::new("64464420913".big(), 1.big(), 2.big(), quadratic_order.clone());
    let beta = QuadraticOrderEl::new(
        "69350242047".big(),
        5.big(),
        2.big(),
        quadratic_order.clone(),
    );

    let strategy: [usize; 240] = [89, 55, 41, 34, 21, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 13, 8, 7, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1];

    let e = 244; // TODO
    let two_dim = ec64::TwoDim::new(EA, omega, beta, P, Q, omP, omQ, e);
    let klapoti = ec64::Klapoti::new(quadratic_order, two_dim);

    let ideal = klapoti.secret();

    klapoti.act(ideal, 39, strategy.to_vec());
}

pub fn params128() {
    // p = 82584400069028176969864875601918020463682940233361724162792604696040966687569903811249237681812751105439874935862118106234093567

    let A = ec128::Fq::new(
        &ec128::Fp::decode_reduce(&bytes_from_str("16934404786697719486917306357790866460143697146443508937848850284038117505948318824342128886226774766801649033130784961418562381")),
        &ec128::Fp::decode_reduce(&bytes_from_str("0")),
    );
    let EA = ec128::Curve::new(&A);

    let Px = ec128::Fq::new(
        &ec128::Fp::decode_reduce(&bytes_from_str("59863300744485013731897712276149923932383199885467575021657065727764203021427946402114748928597287748962795133388051727498697046")),
        &ec128::Fp::decode_reduce(&bytes_from_str("51892010207664858757041922058876180123980809140857588790495277181867627323324256259930128836948677378754183646141861342412565734")),
    );
    let Py = ec128::Fq::new(
        &ec128::Fp::decode_reduce(&bytes_from_str("29651129852414725100466041874650632075693816166088557276728575806667889867356681072078905242097240343589042539891093325519206018")),
        &ec128::Fp::decode_reduce(&bytes_from_str("19177999055129896827316064742840059125203686084516368974500398629326296483656444688137984093875458946794770270294568851338692864")),
    );

    let P = ec128::Point {
        X: Px,
        Y: Py,
        Z: ec128::Fq::ONE,
    };

    let Qx = ec128::Fq::new(
        &ec128::Fp::decode_reduce(&bytes_from_str("81119653468638531824479200169282327929154549110533291410880087203226931155637746008665966334474675792920874175783172719860709168")),
        &ec128::Fp::decode_reduce(&bytes_from_str("21278355406108992255653858469328320937764601164790635647641889666882458941823295505017072364678040139031944704373096673800433516")),
    );
    let Qy = ec128::Fq::new(
        &ec128::Fp::decode_reduce(&bytes_from_str("26497478339877824687082460002264187699565044363743109169241075660148295442283873889640419041251571198477856707474102140112867720")),
        &ec128::Fp::decode_reduce(&bytes_from_str("7488059280010720023113495703500588871168424935356316197009135548031665372197025397903018924934340995227063611306386157267852883")),
    );

    let Q = ec128::Point {
        X: Qx,
        Y: Qy,
        Z: ec128::Fq::ONE,
    };

    let omPx = ec128::Fq::new(
        &ec128::Fp::decode_reduce(&bytes_from_str("25865855798105535070060339451464785986691651794964697617786011378599841504498635832636020973861340200432107394469972653847989238")),
        &ec128::Fp::decode_reduce(&bytes_from_str("17268291482883394990097745935997172596774602244727473813705698469546729738148060329006705980914705334346793029747699463586438103")),
    );
    let omPy = ec128::Fq::new(
        &ec128::Fp::decode_reduce(&bytes_from_str("5341697916236427260227737271174480346003517791629292615300591652839106496231990308537301135022390729813266618185934946151568954")),
        &ec128::Fp::decode_reduce(&bytes_from_str("60881502553641091941686598270038087148119101590643438718127971593418224207842458424172020534439935598204931318994489605182900654")),
    );

    let omP = ec128::Point {
        X: omPx,
        Y: omPy,
        Z: ec128::Fq::ONE,
    };

    let omQx = ec128::Fq::new(
        &ec128::Fp::decode_reduce(&bytes_from_str("72967421339958825375922658779145288656781518381749620029494223201852551671257138589990759631988935009932242535154257108825578025")),
        &ec128::Fp::decode_reduce(&bytes_from_str("12595682284055600159702175600709856751148395338134615461823265170641736307527344148460745445119859943729252498879780103196600018")),
    );
    let omQy = ec128::Fq::new(
        &ec128::Fp::decode_reduce(&bytes_from_str("14846771963031680687736366361825841096564313226734513242636193740140921693364417763007437561942060748669456564403368452649736319")),
        &ec128::Fp::decode_reduce(&bytes_from_str("45803873812079593954524022917750390471832086791755232540600580409681727239482832473527307492516928544293193720471024023804202568")),
    );

    let omQ = ec128::Point {
        X: omQx,
        Y: omQy,
        Z: ec128::Fq::ONE,
    };

    let gen_denom = 2.big(); // quadratic order is generated by 1 and (1 + theta)/gen_denom.
    let field_disc = -11.big();
    let order_conductor = "5561902608746059651".big();
    let quadratic_order =
        QuadraticOrder::new(field_disc.clone(), gen_denom, order_conductor.clone());

    let omega = QuadraticOrderEl::new(
        "105350681293392914433".big(),
        1.big(),
        2.big(),
        quadratic_order.clone(),
    );
    // beta = 5/2*Ï‘ + 30751779181008197303/2
    let beta = QuadraticOrderEl::new(
        "87686893379645659634".big(),
        1.big(),
        1.big(),
        quadratic_order.clone(),
    );

    let strategy: [usize; 409] = [144, 89, 66, 55, 34, 21, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 21, 13, 11, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1];

    let e = 417; // TODO
    let two_dim = ec128::TwoDim::new(EA, omega, beta, P, Q, omP, omQ, e);
    let klapoti = ec128::Klapoti::new(quadratic_order, two_dim);

    let ideal = klapoti.secret();

    klapoti.act(ideal, 36, strategy.to_vec());
}

pub fn params256() {

    let A = ec256::Fq::new(
        &ec256::Fp::decode_reduce(&bytes_from_str("16934404786697719486917306357790866460143697146443508937848850284038117505948318824342128886226774766801649033130784961418562381")),
        &ec256::Fp::decode_reduce(&bytes_from_str("0")),
    );
    let EA = ec256::Curve::new(&A);

    let Px = ec256::Fq::new(
        &ec256::Fp::decode_reduce(&bytes_from_str("59863300744485013731897712276149923932383199885467575021657065727764203021427946402114748928597287748962795133388051727498697046")),
        &ec256::Fp::decode_reduce(&bytes_from_str("51892010207664858757041922058876180123980809140857588790495277181867627323324256259930128836948677378754183646141861342412565734")),
    );
    let Py = ec256::Fq::new(
        &ec256::Fp::decode_reduce(&bytes_from_str("29651129852414725100466041874650632075693816166088557276728575806667889867356681072078905242097240343589042539891093325519206018")),
        &ec256::Fp::decode_reduce(&bytes_from_str("19177999055129896827316064742840059125203686084516368974500398629326296483656444688137984093875458946794770270294568851338692864")),
    );

    let P = ec256::Point {
        X: Px,
        Y: Py,
        Z: ec256::Fq::ONE,
    };

    let Qx = ec256::Fq::new(
        &ec256::Fp::decode_reduce(&bytes_from_str("81119653468638531824479200169282327929154549110533291410880087203226931155637746008665966334474675792920874175783172719860709168")),
        &ec256::Fp::decode_reduce(&bytes_from_str("21278355406108992255653858469328320937764601164790635647641889666882458941823295505017072364678040139031944704373096673800433516")),
    );
    let Qy = ec256::Fq::new(
        &ec256::Fp::decode_reduce(&bytes_from_str("26497478339877824687082460002264187699565044363743109169241075660148295442283873889640419041251571198477856707474102140112867720")),
        &ec256::Fp::decode_reduce(&bytes_from_str("7488059280010720023113495703500588871168424935356316197009135548031665372197025397903018924934340995227063611306386157267852883")),
    );

    let Q = ec256::Point {
        X: Qx,
        Y: Qy,
        Z: ec256::Fq::ONE,
    };

    let omPx = ec256::Fq::new(
        &ec256::Fp::decode_reduce(&bytes_from_str("25865855798105535070060339451464785986691651794964697617786011378599841504498635832636020973861340200432107394469972653847989238")),
        &ec256::Fp::decode_reduce(&bytes_from_str("17268291482883394990097745935997172596774602244727473813705698469546729738148060329006705980914705334346793029747699463586438103")),
    );
    let omPy = ec256::Fq::new(
        &ec256::Fp::decode_reduce(&bytes_from_str("5341697916236427260227737271174480346003517791629292615300591652839106496231990308537301135022390729813266618185934946151568954")),
        &ec256::Fp::decode_reduce(&bytes_from_str("60881502553641091941686598270038087148119101590643438718127971593418224207842458424172020534439935598204931318994489605182900654")),
    );

    let omP = ec256::Point {
        X: omPx,
        Y: omPy,
        Z: ec256::Fq::ONE,
    };

    let omQx = ec256::Fq::new(
        &ec256::Fp::decode_reduce(&bytes_from_str("72967421339958825375922658779145288656781518381749620029494223201852551671257138589990759631988935009932242535154257108825578025")),
        &ec256::Fp::decode_reduce(&bytes_from_str("12595682284055600159702175600709856751148395338134615461823265170641736307527344148460745445119859943729252498879780103196600018")),
    );
    let omQy = ec256::Fq::new(
        &ec256::Fp::decode_reduce(&bytes_from_str("14846771963031680687736366361825841096564313226734513242636193740140921693364417763007437561942060748669456564403368452649736319")),
        &ec256::Fp::decode_reduce(&bytes_from_str("45803873812079593954524022917750390471832086791755232540600580409681727239482832473527307492516928544293193720471024023804202568")),
    );

    let omQ = ec256::Point {
        X: omQx,
        Y: omQy,
        Z: ec256::Fq::ONE,
    };

    let gen_denom = 2.big(); // quadratic order is generated by 1 and (1 + theta)/gen_denom.
    let field_disc = -11.big();
    let order_conductor = "5561902608746059651".big();
    let quadratic_order =
        QuadraticOrder::new(field_disc.clone(), gen_denom, order_conductor.clone());

    let omega = QuadraticOrderEl::new(
        "105350681293392914433".big(),
        1.big(),
        2.big(),
        quadratic_order.clone(),
    );
    // beta = 5/2*Ï‘ + 30751779181008197303/2
    let beta = QuadraticOrderEl::new(
        "87686893379645659634".big(),
        1.big(),
        1.big(),
        quadratic_order.clone(),
    );

    let strategy: [usize; 887] = [311, 233, 144, 89, 55, 34, 21, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 89, 78, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 23, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 8, 5, 3, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1];

    let e = 889; // TODO
    let two_dim = ec256::TwoDim::new(EA, omega, beta, P, Q, omP, omQ, e);
    let klapoti = ec256::Klapoti::new(quadratic_order, two_dim);

    let ideal = klapoti.secret();

    klapoti.act(ideal, 36, strategy.to_vec());
}


pub fn params512() {
    // p = 16817108706960936047926250343229286165364990341381367811283310868820935595132760045264173360071734436962452806133974268664148211143175426529145662665005373084634528906709745342408486815448880285004001922067794609774238712489745132120678885224411134478776486050268946668789602410845866513375293532853950407027320322402414997263032829083981504396201531108899159641304979638840839572964949642695548216813886050284686242388986797442666560125246393609960082588564252826133453550579216736673746537938943

    let A = ec512::Fq::new(
        &ec512::Fp::decode_reduce(&bytes_from_str("4369637819393244575550832609459187443597522774282405652327541866917657512131248674231155040660481865207064812540993772611395305199945139231445709490961277991359392669801446260674383102971817906848319987126127755174854466098502765891873817513152569453065317401772413930864588660646890419686825539218066862447134472985230010512806608563389223158163157664720235094455682475322284181020670863143011268014879899646508666264637453483729535739960417726386752075298992838286965342351059995384614713261227")),
        &ec512::Fp::decode_reduce(&bytes_from_str("0")),
    );
    let EA = ec512::Curve::new(&A);

    let Px = ec512::Fq::new(
        &ec512::Fp::decode_reduce(&bytes_from_str("6703082789613815583270325005189477696643653721187384713977438747908966286144780703578918838730460760012818903661058676804035302697180290557809674461841773424140575589931922853368601391591219034047977521618661110388230457463956493885147404729621222757723975378627725143976669640690272434112706024800517454689942241435486934588187253688273923650508366353564134358305165929170160886446640375165941048982993593130906885493219101044454902641562357776263819756016896075761741357422860150207224664736835")),
        &ec512::Fp::decode_reduce(&bytes_from_str("7718531934857112587205373396323347454899136156586877137879119797896462917929317892708017624855892671915773808917488933978877188495898711009501326499361448997682077467359435627941247254052661219413105263594884187902590743966886538366643005453254899367848259831204432420846825362222739884771652630175057558430285807958419130562417242139163271509780555713475035917412492574472043471244893770176277692966430264535638833983341397576425823938914796438137750803593235255397566444392999181838677624309567")),
    );
    let Py = ec512::Fq::new(
        &ec512::Fp::decode_reduce(&bytes_from_str("12751441404422448271731853297878244588734787405593605451927750700907027896742887002870319390111936124401663186136343909607206833755716305097664851985643587102436448518687981779965386974712476675484206436215176461750440693325306963660734568039488567764445251093469330947718998356129396549186568991967038940705772948852981263284429584868641336359716163653649418407804560579333554902285764427954755980055163694908241346023272002626226259481498040260524553696185161436964081174090777135144701053520243")),
        &ec512::Fp::decode_reduce(&bytes_from_str("4652826235823771042776015480414415150520924382913254832464772605859711381588826468344794823805771190071841467341515294952104433177226064602321676833409341510776112881259789655026805587179191708529366844930735982107835386282552206857698031880332003934937103770838512867810558601952240992528047332918250215384782789097130027002975996236399088193816954961112736240737534291895999278690402715404757683520559116046667938056205866085942914343166861576535095132747206427330946720364862228095600611210469")),
    );

    let P = ec512::Point {
        X: Px,
        Y: Py,
        Z: ec512::Fq::ONE,
    };

    let Qx = ec512::Fq::new(
        &ec512::Fp::decode_reduce(&bytes_from_str("1026230366262289990159826111797370218840631156523750786275620256867800630737910424596952630555363756326467516241268335354123304024204441355933623043389152351287869696541322700130499951783257397981887729281448106323648598447130404406004767297270684243692248016978056978742180751268092759849375525410870868256282310721849492664375348980212940032672878677890989294336313814953518758319067594514058813245471483442089908136972512806973859381999791816406300465856986117589488042954223880066606522303449")),
        &ec512::Fp::decode_reduce(&bytes_from_str("7585172327146647502207825816022706612994025902298236967024616133805304944169460955732052080269707865561557455011588324732573064067982497364389705163871316363237299570342899794244454394514813143017443388375226316016795197805244215703385734388378945542385666543296071603245747898325428927411688242616723252911745880701591065214263075037756224515244219136833442237595010678041652459806063340978779967761157410974099553760602591086067937125990456643008262931123271119792326088865023568349826325643141")),
    );
    let Qy = ec512::Fq::new(
        &ec512::Fp::decode_reduce(&bytes_from_str("3028345695158716879221351197034565834412090572698360648613931261578811443028280078798606318581791360990878950082542670943280345578075090515308008233561680610351354167450074933873375087584647147574808007492838141157014256010379935165412089108277002806314125642694315782874092555199088640403136744625198587730240277544008007035631175866444791766557298947566028200694709907542615780050926442655692155954908023629843081499088804368500221738673907943145922740991319114726153822734351663545964881446586")),
        &ec512::Fp::decode_reduce(&bytes_from_str("77220238607048372868308446998217603843564475423150680628232325069315372246359901920889055590324666828038129271861706899694894813743479756034261615801746272877258411324627887490018566219944445312773686801896379860265151639969766296609037519538563993072110102176139347736731455088476906490589997011531989228013924576838296581298571237453126966560949006677051271791485026014375021548901314624499756583551223469404629323649574167259927019579100138152216895745358173236811797431683039954916478541389")),
    );

    let Q = ec512::Point {
        X: Qx,
        Y: Qy,
        Z: ec512::Fq::ONE,
    };

    let omPx = ec512::Fq::new(
        &ec512::Fp::decode_reduce(&bytes_from_str("6397032523264962665969971652506937736558850825064976566650058008643885021215093292914730803503259001640510072167736326545421236188511911531553628486127343195132183520047180360376512570046204977816710061209509278658983703755551342072461765611736041787770878134556931335647653973773114308339246694381406933220499834275817482737384620218953480629210621468212749520639011038314840889601086522635491227024757709573051457393419698515610580493172833727616892253478925511692767957267433974911843533009008")),
        &ec512::Fp::decode_reduce(&bytes_from_str("4106816772570709570091606073989854311493560179211188410266660097487715585040121012481474954012659164025915853331915107358946418102096932088813769450008429024814439162859815108557858850468537111810486571705722245135653296008895571412318878713387161709048146666138213210767170196009550294214699951047734967497562443599853858326214830995115414169386949018458062087245075604897779139559499615139840398685369987159822893255236653089494083412059410827909900299894303841177359598546055765948557870603078")),
    );
    let omPy = ec512::Fq::new(
        &ec512::Fp::decode_reduce(&bytes_from_str("14183133633097776889225776585866056664963866500148747200720678198937916557005898637276531840586970439232501093837954800956902381684210665119087434599068014295877229097637539360120783038679053762645483144270924661691971226739753145104133964337170297331250553064664244682344236802572706810371197402807421417606023853891787954379850168126483891328644551696519984534369881161785923811915829104989827262148944648463589382796304661766977528886553588061346472555637312904854682093582386557947063478482903")),
        &ec512::Fp::decode_reduce(&bytes_from_str("8784635067377370189874121207659881804426361385337790488393945990100717027407570852516622786396217420919607915595336995648800556880441061348570557532257774584272096712836620490835578952873823318076930603901180885168460293115149819010947962489810077625909801374246794045662212802157613072894564753953167416643351608784485758218644545674773184278979132107921542362810032579785912702838680181300633626981773857517023502594293475742499979086710309050242329887476649613921989043750412180919979599800002")),
    );

    let omP = ec512::Point {
        X: omPx,
        Y: omPy,
        Z: ec512::Fq::ONE,
    };

    let omQx = ec512::Fq::new(
        &ec512::Fp::decode_reduce(&bytes_from_str("12846286659415633964432468161451619976941658445410702599504759864518419892570097358414923646670773115961427172791844096505437127240645712260576704059526884007708037674893686368213580718582021320143367646430362151198980855444437135569839548573888137840133497421334099104836278953429356083822301012114475836666468366460748371449182728423642221157501777803291294903072536676132769939073321140732658745317387141598956319922582327651547482601541913422088211787518281328230587521015161727796939460157759")),
        &ec512::Fp::decode_reduce(&bytes_from_str("6999884055850998563344711724707602807334334671261974948775426513648822260261667414547207406900388235997445613540604028358386970369718275319124762229107187380639072855080703195834489865195158158342664761849726713299645282778418597444347326674146960407179033989515213649596510390642773998377631082603934619424184544145995158814549881461431229009027380967040925589201901296046535703903886808489072437280509752952121614476443596108374771632441887613418889770963682872054400869800937518329617748886458")),
    );
    let omQy = ec512::Fq::new(
        &ec512::Fp::decode_reduce(&bytes_from_str("270209112202353022390303312533969261460088125941153888360985894101072484812810690915189701470157315799598167227379636571863589398310978478471540493517212594752172578293558540332371806706156410273788340842896634560700676537400962941370549402212510493219255990171892802063883070089256154053687399502132213337029361706014489281953378030780293756690552655685092529485584113947836178254408403644163979695308489053961797180440362209107551623200086138700804235738840699692045943613757299514459593343622")),
        &ec512::Fp::decode_reduce(&bytes_from_str("3119229623615122337556101631670731162789810692110430863549650776910995238016661013209125974214727062679767446475742515321514974986083813492234903397962562505483820975701777273034013395420149415010141544080843987671428144591619928060063800808322318334094186008238240424007944162896049859049143663188433352199272377581760752112531349513023847613739468826114846664537941526840469719665938802693815973478080844431102371200119930301937310060321192065293182625122934740899950712471080632197227468865413")),
    );

    let omQ = ec512::Point {
        X: omQx,
        Y: omQy,
        Z: ec512::Fq::ONE,
    };

    let gen_denom = 2.big(); // quadratic order is generated by 1 and (1 + theta)/gen_denom.
    let field_disc = -11.big();
    let order_conductor =
        "34912628517411597986722280174925946878633333688546875202053332372871337315891".big();
    let quadratic_order =
        QuadraticOrder::new(field_disc.clone(), gen_denom, order_conductor.clone());

    // omega = 1/2*Ï‘ + 1329069277979427518548494869659323483948956584845223167970401259730478351270907/2
    let omega = QuadraticOrderEl::new(
        "1329069277979427518548494869659323483948956584845223167970401259730478351270907".big(),
        1.big(),
        2.big(),
        quadratic_order.clone(),
    );

    // beta = 27/2*Ï‘ + 1474947587453319227067450510036589234454539818780937894230669120639397875015835/2
    let beta = QuadraticOrderEl::new(
        "1474947587453319227067450510036589234454539818780937894230669120639397875015835".big(),
        27.big(),
        2.big(),
        quadratic_order.clone(),
    );

    let e = 1641; // TODO
    let two_dim = ec512::TwoDim::new(EA, omega, beta, P, Q, omP, omQ, e);
    let klapoti = ec512::Klapoti::new(quadratic_order, two_dim);

    let ideal = klapoti.secret();

    let strategy: [usize; 1637] = [610, 377, 233, 144, 89, 61, 55, 34, 21, 13, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 21, 13, 8, 6, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1];

    klapoti.act(ideal, 300, strategy.to_vec());
}

pub fn params768() {
    // p = 33395060558743137027368454504087359109207798725160617707283511909435409148276414135214427465966285561662314837816800054200006473966344546824760846882458741414763678152082195180767233443977438203690887118082735382303478611064238643796768337520264988676353805457677047390442124083254891639725210964530401640226353609392634113421608298739060775799549376538257097147975941782552422655324158490503998562433330513333060308160227118879409222436901396388469091363000938373286542390624603820082512836033410175744145734108210038943519646240873562675299972451964455930804680435508286467772202603186653452703845756781869090891375594328685867683372043241421249159811272512709227633970041273297115634684087786086779604707555779720023522672639 

    let A = ec768::Fq::new(
        &ec768::Fp::decode_reduce(&bytes_from_str("14342197545082162604071513286026345060794142411035003972290259023209896261777822265226734104178225225649063662822117226302542144521471432200592971811199535655627642115212215853889514556410437295677459484077921769874729067177759880796870996451000291933782439875627541100172758375618715572042086171580511527086580096673711655566709833269856314884263942434614251635766812681744059234847600072600301813058272988715108622829823362941178491120559635376686340105360932451940909551596777455978182474803661747472503503667203763684303827860206819737988683161315017206286023029475053097173119088319598911320853646856218137230817752899868273161559866766214861908203126875036493836283272091243508177821006616219469340569697134185503172091400")),
        &ec768::Fp::decode_reduce(&bytes_from_str("0")),
    );
    let EA = ec768::Curve::new(&A);

    let Px = ec768::Fq::new(
        &ec768::Fp::decode_reduce(&bytes_from_str("25532019886743610738589898673905613311383959040552338038340925575292077148634073528436226604477729274340222058762606835633260044839043768439875799960223558600302705126976674317749539479918139548535840683349689516790804016581070652913331884681556021544233513253839604602743268594479712808268855658654401608777456629341840317581552627608730868484763550635653967861289266174213832895716082408857781013945580012435701583891564506576598056092962237959818809621699143351347343118207682706821709957687978465024690947480606986337365373787051614579903871357156156704624076307309497760426994757888578417571001539774174498843888552030300012975603632239303995049431842478621134995375587077164343174854964015522087790072435836656163124459363")),
        &ec768::Fp::decode_reduce(&bytes_from_str("2983516861981603475183396517230236507312677834593389672183220388281245998771486694352065708507565373600034869765710744815597618942118076247105485601874853242757534184343806854175072287347812643890289410595990347386409457167689582484235712468894740464043573274615641447856301244878154393102861415825789458184852997996988649215548573821930685665204611217117318111393594294104874430063019674247120748591777150819667640210797141288309115107673192317816379226908991888218721301744089179326238708095809121298560838798541196961439705135654775052248359216040038627491951137502071277281584723981176723957514850755279452265615787238057098188576096995197594282756994627816245461063022227774368136318125762411981698985685860925285857805295")),
    );
    let Py = ec768::Fq::new(
        &ec768::Fp::decode_reduce(&bytes_from_str("17014380923615123805937029188952388711161875412615262887948293885858850497343958504250051227575918829305821365441704045856362554106139706638775446058936255571683040462953042825428009242658286841797320602371443574031091131517439172289994477361321797054317819299997280512366429755306723242014116407623748789564847715850837329731955116510688189802664824510439934248326924580976096881400973139547629858161083635854428217174749271282251348472410897149900982022876124444112630503688079657357120041251844756469769618566817698260508127340083530823689567276218762137199831409831462165807232679729974995193491297239880952999868230883337600179955106235620931323404644135186652646309596323438921296481048200519189305384166401414647528891563")),
        &ec768::Fp::decode_reduce(&bytes_from_str("975111721967473428195061601821317428471999857869200446829423885314994141955004243239136271066099627476402721907372522225304898260903507717327864662795760506140269379461611282812191713593285108867791347897423066670319695250485119931023443019149176430136779101925930700260455137366055512381359016545642475180882810678903444781469627244334580335026460543068551177407246228504376611853257210008067440571121629198207318915194287620810899101802114501586155028734802505231824437974927189174889211404286385767082499388785012042219875160643799947956725677605650479700300855462259861929214046074737761749916223615981675089571686829313218264740556971016896451615243183859878651834689833561667499284414901046473802980835581498944798600798")),
    );

    let P = ec768::Point {
        X: Px,
        Y: Py,
        Z: ec768::Fq::ONE,
    };

    let Qx = ec768::Fq::new(
        &ec768::Fp::decode_reduce(&bytes_from_str("19555425161912148730969504942195074485144936249206158532724094783141908092751421201639017824735788302951330856758508410986860582075520966355778848697550752742041575345526637633326936410898304318479830409105145265584528953218052976589862748822921565460638033415994094118991005536362931889367508635637540838648349678602890333715964909785508714173999788420943187662273969124207437280584665218692338892721277631199842268778151042753315343723236213942273335749684853895884152626239656533793992392084114805537194672468511114485547997190884536925212168178620785565980646897030780451674283264917969026440382077714877489171571316834755604460251814291449853006191287591898705768464938287129407354164006430339665701042342208270547935485583")),
        &ec768::Fp::decode_reduce(&bytes_from_str("21438244608981606700657691279910457524747657500813694593482647725378787040575681915796465002690172580860226030466244773392873138607079589257371581291319150144091301864283750018764295008716565997651039350942701887595272090919289394654241522661263218597753655559721713819252210203360998364646725809713541036862612223299562768648911082684744907269152164588503662922746209506019101953882179168457622440452757529672156251228879923045093097353931801303779135620577741334851257005963395959185771410801572898930740136128075422509151626743686514613033503809158726413672846493219177014065969762467316229290140555524060330271209448766146670566218137633067530144955026759159750074562798124518253812333831574197302294471210262245263528025399")),
    );
    let Qy = ec768::Fq::new(
        &ec768::Fp::decode_reduce(&bytes_from_str("5623523935456653145367491633566247080874923578154074901983019326980377436168658850080012559390252961377488621541042789712986494169068821182196838253496489401740799443445948786609700331652730540643117287019712426699922109495131983237221318248322173854270016261931909752130419514942808957907380987213056342385668070000872723514821546729000743845214732338027201726337212040839617349612375096920807816079162398868178589266264238336464422449045360680645674355325911147213963518645230251418408961438169392384959316024851866224050685661849421626940412401832127353667132554360742132145980417240884040605957542573630300105879303139043809933720804721500186863359411156440390130582086020844680212993528941940967513948982212318805304061421")),
        &ec768::Fp::decode_reduce(&bytes_from_str("15092929821743374745922861582223913826552392802410506134542370586187960417575927873843786089234440830773985666261922006950170709715174819562316243795603047156636523297977893058792377787032902357917773997843227067266158008293196602395095860424732314833875290885944012675582399604144402479374729300786645235773829399089802974666132530402903959065651690284004525026934792750240798217699981704469326348635162692579141948071476456937793187194570175590663125516599416018206646570118997268149303683944429039644529994963767858258483435756145087768580986235261720005519078289342696354694634905526592896088971427877971766311816254182603059317786065060807648909667335045585138230329596778239462679804383499413798701495801783815489560729610")),
    );

    let Q = ec768::Point {
        X: Qx,
        Y: Qy,
        Z: ec768::Fq::ONE,
    };

    let omPx = ec768::Fq::new(
        &ec768::Fp::decode_reduce(&bytes_from_str("9386816074791403841616723568652387206435080137925792175754439003435251081396391423518710687540125693640299041981911515433530265524453492843499683340822115485181357478855586893070988280252069443762505516371339274324787502513493694948726363634650393862191347393578494988755233354430942187704077239074000412131880498415764828557391461057875619703072333441237546041359714529630773788546965042978189580831741046134700412936079451115276753640238240892557190452577892815365042259828783352315530651019229873634475432779561605634273202565763900555364502083397786517787452657701849930111519536942265433032473023971021802512931441919806819460360713993744291017823672149006835578757925068158404495418942986475466085934209184200093256024241")),
        &ec768::Fp::decode_reduce(&bytes_from_str("30864787646816393741826008360818254229308004681030119445591239636289742811029804242678729739785233676821193803838738949153617691979043819434138760912660229429979490479865620680627248500110202858148323999981542611966651244505354403661599236386535750867368612716924382077552841290104339393229855647263121492649667861461528829628118940424139862640592749080328521774219222666310727953819659796212664430180961153490308877438230331850167275625636179689770527900491196457021561548526579998289965543915942279022814121895830902908011482408276720218932215761974657480133552607527527643837188643253872018178133524828781967689221791916280630049641104411907828055697326935883308322313194750576084538793496198100639557682168767097259917323594")),
    );
    let omPy = ec768::Fq::new(
        &ec768::Fp::decode_reduce(&bytes_from_str("10505260238203570426048629711301228991728703342087152868931018102423637471470453620238791230329364552711023761303254611070093659751769911858178155426072001962575099906459423560520991054988085976175624807883935577280167075985806649719817531136674794876473819815708979622900547631170829180429712325971462876454489688302139781956345961335058951568164432162869726882895394066544008893008055688992968082428203434337423824828777559054805530350260645234857794615193516301889509162378266381119847818508504928131167101152011715337713177640072111819747874385992049738121325770665610797876473039881979542816118425198919586520813167005109352917383433069476058567168501023103416662151869248819945157019416499864883949005246315814013794415296")),
        &ec768::Fp::decode_reduce(&bytes_from_str("688999725711646815235669014118751642613035325528106356175575554588469426053310466690339809382328043205993944717828823716558173631879983070405224102188782337584090250539032976906354070956390736519659166826479089830269781667100961232806102798867812375034494036864186945875906628079291077842245779796695280217524058017071706067400477998338774211039287173786267573331787867050792080846399907720971608067383468810987409272229977721441641587066604281997875103147349012178562899786548500034732674752905919052374582976415658840170439494291475685277349402937122880886372735739698553420721134759910420833736084181317151520545368482248663881887059388321008421789902203461977524327999965760802996676635582749653093031690202384909708106699")),
    );

    let omP = ec768::Point {
        X: omPx,
        Y: omPy,
        Z: ec768::Fq::ONE,
    };

    let omQx = ec768::Fq::new(
        &ec768::Fp::decode_reduce(&bytes_from_str("23669143378754032281131424071849608073369844073909942292021558828443027528880326845882078468616892434307206010050073692464704979792107922611124835847026382676980266957926445192201225840611054868439120061620780566174618779638829877554844405288691281092536115905640570745049704121603568279616079848479041092069981398026924695993533003604033546413856942576262779246361062491352642245804332934619791687322117767501042501315717451440303276848208131167674152192856469313784131112111223309482505749508932805762912433722519969335839263938908414841575462772139134783854048748562562133078805840387330437451093517967138167604086092502011809044827620105626081885599071045560667370960044720008669658643494588649891677666167757822179232188197")),
        &ec768::Fp::decode_reduce(&bytes_from_str("11711782854799653214770037011478610955291342659595109947790463644136678573311233405770794755925085206912286304707914796967909742833418084126255929547722434352071930427791286805440924088973926293437822771511390130591522411856653219739915167810101438103894866957823675332605604373341658427760918554151115992605822505901918596486633109269754879010956022848547763933841365764732965679062548078560979967227902261310251105292844017827410934883804614677954640808417052582468716169650706632110591852649857225996864159140603355086137141100861089420893405723813790231798752494422455492579959461908475604533540323584922903583979291368240424120691501742580934991942020804773221093249636460211789289857962534417581560503122549922339681431965")),
    );
    let omQy = ec768::Fq::new(
        &ec768::Fp::decode_reduce(&bytes_from_str("28126783464097458026420319098086940177330540145416466674078299448281467389580686132120435816409784302270263905349249736536969433010070117848109125389932684318378295504097723407651640657810210299194211956498250663006704257607666200791832806855766071563986487755230738601113812721070187603879797306325284395207664876085959310022519105367262452807330303520759642811339392586687718234277243945795343898056225892639243101360971723845276865794575117004923869551041092216018324936302644824696426867297051798483197054910645684307315896566870784983953514024595751040007859273478181166685087773256691764370671615936233758728998149476534617903168835965339739778711773741895823171729246524288160283203948992104858608248348277040120494539570")),
        &ec768::Fp::decode_reduce(&bytes_from_str("28240074856643402501854907289116562349595814598141575797989197639407084083137889164500989904719854039844021245720949562392326262333270162773126059397128734391367763596730685053869630544545338171266000034595474380069393722300534328497409971326118933429660259835259177023263399181436645369293198634050260512665748736895357717076995644742304712326292167519260973036975100628514757028328289429259704474526736297911067295808436852000493544189152880766682678823947957257281098223160717896892531883227384826492682429924399406807808971906361410816557606748086166467077428558834745018178065713240339292582630146513450262963333924502655550285763030804164833259553937093171076151666194309078521655037848843669629804547509935695598815821706")),
    );

    let omQ = ec768::Point {
        X: omQx,
        Y: omQy,
        Z: ec768::Fq::ONE,
    };

    let gen_denom = 2.big(); // quadratic order is generated by 1 and (1 + theta)/gen_denom.
    let field_disc = -11.big();
    let order_conductor =
        "11880151867336273221055325404771361237333312702752638899261416546121912321109555864993171860267910595231175120944483".big();
    let quadratic_order =
        QuadraticOrder::new(field_disc.clone(), gen_denom, order_conductor.clone());

    let omega = QuadraticOrderEl::new(
        "3553122775101972431033181543151169691280653966950192848939404943599093727896082083613955560520393251585763440160899555".big(),
        1.big(),
        2.big(),
        quadratic_order.clone(),
    );

    let beta = QuadraticOrderEl::new(
        "129570395548089789703379992610993050488297497051786162844984049339441443037245617320450665996888679315584793498634139".big(),
        2.big(),
        1.big(),
        quadratic_order.clone(),
    );

    let e = 2409; // TODO
    let two_dim = ec768::TwoDim::new(EA, omega, beta, P, Q, omP, omQ, e);
    let klapoti = ec768::Klapoti::new(quadratic_order, two_dim);

    let ideal = klapoti.secret();
    let strategy: [usize; 2406] = [830, 610, 377, 233, 144, 89, 55, 34, 21, 13, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 233, 220, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 76, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 21, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1];

    klapoti.act(ideal, 400, strategy.to_vec());
}

pub fn params1024() {
    // p = 739047374497571073067147030273896817592270991887381878791771086103505626324490396202533695982025452361033767627373251289515918234404033507052140064204466184213540084896545235671781891032680185221521116145028045668150584555064481005530563359642771278659507847021919939067727689726122686528747358314874328948686451715814597180300310063478673881633810090262924429481235385868735651462113643910274007461494719832664136052447645117405209489148744187388599395232034082136777302698710844384946741681803288237498033892414925548530114143206900958235941468713500620428804590464056645267492222816472134065778039447912552168480062749063708077399977007611994082339285434641748238701763861556120185572711207165911786823849981503114336741910622067601523541751045905950178020067153133625248328549843897879189262865663052173669282832024225711502466063763839884267046065964548174893030997252752999010318997979360117282581884199731288980798217573376172874253265751215237069012991

    let A = ec1024::Fq::new(
        &ec1024::Fp::decode_reduce(&bytes_from_str("136809797045212137782653349134096471948509356507282814771504044579016945722352216215434481406376106984116228017360255910626086650642841584387147879054754000655980825103408224336244837568619074482675238781137268705596599386079050186984536832844770177230437845321143368665058232647229770878585525434974855869645079001700735021651936829138468044951980920526731528432851158596523395835636427396038615956370073882272441841866719594534308262589652051850628977959654770685603755099992979187863933430821299579324686497063903941736153868363654657588031337587244320463018508532240654406200668278050902489310120392471743792358722868870077882170875358041092899834474934516562907878665767889405358901974982451153967122536070879069741403098533170911751779995198837741765442489446452280733914801230638538645511764237417818454383663498438520487186614750770092620690262776280783366047371375842210887078941879861022944490853151703669715195173708906144189479501502244318115293250")),
        &ec1024::Fp::decode_reduce(&bytes_from_str("0")),
    );
    let EA = ec1024::Curve::new(&A);

    let Px = ec1024::Fq::new(
        &ec1024::Fp::decode_reduce(&bytes_from_str("692471439097036245209064188204173214863472304493067526875995681606994858123109885739333522005629035692098857453792412896144931355436392629857198861075956468966325075555986819418090014553636667705270552177882220710151313912277038889065408364144853023711583888352251167343010382177599104520680831338236934609384196119206403787170230805322644251255315556120226016033243819054049335047944064164804479362451026382747765071673672885304032782654438304882929104362211549967429669934885237583929419514174175319414276065973720330897373834957690478775170950476454900452227611934947165305423391287885808044786639445174581494213657523531285680372057560682447144126947049708041185003905757753686688548567343013021265562396866522113300762098241933616483409202044118190823744443652063945290318930644671552255999592639560239964016857951590387718212830034258654768327769955559476243674850480643793924810538140500605305271711118532177309928739082545346373365918967235448090086484")),
        &ec1024::Fp::decode_reduce(&bytes_from_str("473697375522334113131192688848137798924741823305983015602904251657921840942215123702888499885157678405290599043846969593468792812633744030428448285418242574094408220351916858145843561742031944200403298805614862615256111387223587914107478746806735535053976722102207672335562337058654516895502791342237706874289710951876175141657810178873189824631686917995985627368392651747761254320436699075311295898982517850048592353242884996873421405484686715968243188146164061279282313245027645782730431465890979413885954854408990229286020250518278834356823562308006797719969993105537686647296354881392177958696393640616102981425479975118251050823756510880702979872741114004680782067508042491818379817205366156429588526833583769316051467332098323942942158164646422589740544207258039497384544499138915889274239652539732088809444206764049429555701158505640698968289973792638506053755529953449759515141443320437240049619639427439107884182737466763875620906024370291158800183406")),
    );
    let Py = ec1024::Fq::new(
        &ec1024::Fp::decode_reduce(&bytes_from_str("350029007724540871681295271892974440118813231270574764632808026728754098126351026197774289581779366754681517419052666783886845362736415389646031176002686773615490374137609652515370197713150834546415513348265980569995454150537481925901111638840887789800919033199981314788782688068370682250336469573836474384334206396182918435286552064085663905482565348228422420686445438968316398823277424246205161687628909532933690167661190025655843082653736089304014676596332241709888129192395946898041176271228683936253869675660121029916970566600986872444610008048561736434545705946034374344559762701655837883519775772866156370320463808002893763902542833918266196577822944095921296205116598993058407972828075222803558835899504311956575339329782651403339000628347736517388284244120378589398453772934103186943003656327566756661595808233551827921240923377844890976896352269934768082030127718487590834737125402640374940490296413908864687647259127092899873802609709530351791518593")),
        &ec1024::Fp::decode_reduce(&bytes_from_str("650747052193290606232168392197548280584680839653814404553858457802005236416822141008663442181696583595187595015675269326102785624076927305091121571610208627442215990483688405419897889116070127600422373961422062302070616405125367986635570789373500875060331034848447538202948305005557663082257007914952882340284777202842923949689551069872797261207261950593027013526396178315937309426832969623631260525579521085682851870538918057422922289946273056555796300972375387303145351982854108842504196563834013044949041848726532497931857334950406801555309366161710771024888473199157113395418390050929422431857174256289539425480451504654077866647369235777805412344574813691448576281029935932353988997747539134824095062759867676627790731168674116689674174088229190266000926052146585492054400625063204823524798587569578571780381852802268103105967372659624881805562497539694952697243316427042576383431685532765767341602605111001314312845275154084734087195117212814452399905378")),
    );

    let P = ec1024::Point {
        X: Px,
        Y: Py,
        Z: ec1024::Fq::ONE,
    };

    let Qx = ec1024::Fq::new(
        &ec1024::Fp::decode_reduce(&bytes_from_str("264952267523446188721144044969431318595225787169771455563331101312692357637441684256881789232145741130536490704415182760285621182638262571139736483866599844793285740996895219946668189631989658783071116510706038581186163555283892686304509003024380822048870191760493137263700632578572638637257227184648385912096662709350092051859983380823510128664070530026492311357923917906639357370589124497100980467094500163457581691592878343338587305043175481831033986107541457919592869185786004849876913662548159998501955284988096716910809590521306797131730177822004852234280330984336812659092452547365679152937061752809388509556147103910251360596079870191375136072005095985692622831064163852916619181647438633685287311991660122484973197737612098758218006666895181803483329882656859361458748154545562690536393958348728580654205026326174782220484592727272694879781550878773962169978226569684799356182138101168060249875836524378491440516089425941941320401126526966207542142018")),
        &ec1024::Fp::decode_reduce(&bytes_from_str("51849081893706541843479599233356699229381916229072410105863720825252953836618039353470851398190985214406522500230368807722923943490563015129954076365175939780773276892058127147844418356000512314407071013378130285115819639749848730169392460238873519084447158456088710247851553590290574032065498275249084724125595036934740413713413183596074591981108138397826608870749423632856735449769469697741950291820193406772537127316041898539846358772578325055986098057534931692667696884152206733083600741610678754357876002383078591974216359457409873923838104877799103684958245405481258625673363077137879352252157510492044161649096831830372114393956398889130178342100608225685160508581439355276187644365334154687889961361858004498468697946916446559130794198825605419375504881595963239685650018470897064548041129724733749030605890288024191280828747326640848539719006552393342408674408533567890878025345753610153588877647544868600496935049916507020339804819381512651036725070")),
    );
    let Qy = ec1024::Fq::new(
        &ec1024::Fp::decode_reduce(&bytes_from_str("723496446649733847030980748870392453714626743111118740971229441745382638314573103205283643749110933377961480635522289791709365576423145037478722315647691101115819008964603341471849141876582522854811757147228995480621875347744291680840252014994204615754066008308371478185401921828269886165372083289775933902770707382211576286068761140564608375031557822414180537542169626449213657080321214262239044987957505193289859061228622493012535112726949953310568601890183398869891815956316857072620293367982009723484943222849389011601794260950649935676158242687863951053980866799748939928479321433265925412715754284796176083792632776899393294416388730935124211071828666924478727454883644732465629263439811384160336243898878517538280896522414954228914580205620993030733988297291218844811854090725758104272841066416626349669698112289200798656209295581013356403546344209983522438985479656081332725760240396333547541736530522035468737005435973879450927618592120566323411509221")),
        &ec1024::Fp::decode_reduce(&bytes_from_str("252915461702408229098239449715986816182067840629520983834407486087930106274910057302063453167610252666131914459765224002740704768267472682011664647081764693085414906430638286063224240915500037882335504820524508054091326404692089193631332289795564084673007975584931383782668841840057663546739677079644719796836285306617149907920584551945519031883960876500673650763992459967125560105721838367966500736058180821856658711670377711259053204454920484138511965498448935788593718415357780455526671682258522613121557993065326831144025446495769512909174207199817759947617019170135701864515497966693099233887790713997585853510717360364877785209161567216002703050769148603091758639363222300299365833406368870895941346518753355212709612308122373998027282033533646296348045014463561483537449843768349308978368791961247843224734111658100936081508037394087008426432116867563978576421088524385189286500951465255788481674200434789963804992168372654804978469649256132473468776275")),
    );

    let Q = ec1024::Point {
        X: Qx,
        Y: Qy,
        Z: ec1024::Fq::ONE,
    };

    let omPx = ec1024::Fq::new(
        &ec1024::Fp::decode_reduce(&bytes_from_str("392917751237862078054451978071625984626818647461094334817706584180816975555871425229195153762855052607894324010942052050699346677781771243717337605419394580237494778308286653560132008495491986356012803723812967139541814186439903948262700118270439499556329277282044980080863666080740014013665394219409914409769515202918359275351198722204128082750494159242352888167810150671019373403236967335987685365861249856175551848904432642391665910635649873852641539624419630290578153994936446651962133011779923835559678941063437630998803020083852643485212355828148298041216088180855737306614718696265069027659667221074185978651206046431248501937398830285254407323489281898231460461497317895447480576426878811008377010222375068876871585918187222873263872856747481879243782387568575472177642008169142602502379912683914375857809898083178854646354402946372059592529878223004027349555490671128250203345925304622127441507431988071662949044071247395316249666101157756803546043515")),
        &ec1024::Fp::decode_reduce(&bytes_from_str("20804810472877185967149702610824693837256250263248316136962308601043830261703389298514831119790761724232891789090360563195328320136972143136322643112283014352055828771637260817596058730261158419481683895277031553988377260319649473578796057675923056564261265993553503235944328846400300759474945545290699575143314029208857182553310863223189623142866956428867497655844741992321108904796759637664283245404140179605471297613272378914368321920415749934645287545978402841317475205835089534528136219705642173084020593564815601088958624697273923356523225394747400281882176723314537127953607848811367783236037489161449144856244565739649808426168662837927987310121233482678943171835577130673692676175377982336047124705937538757082829887997775175841565106621411560345333117577807034962751063333438380130938958720973468206643428152352081257955282357783661154731113194043636566769279965653908349574607975894913430423876825504499344512273123145840326441250885672811060995697")),
    );
    let omPy = ec1024::Fq::new(
        &ec1024::Fp::decode_reduce(&bytes_from_str("618750273177508457631048050080402861407462778584011829352406329458128870917708177619361748106160847666727007174501801417538184888523983252076337891260354798403066758293524051892294860679743058842388519553551800794828217318905106825109517834700020874409207760411036563657501478787191412368887046126045612031331780369302991343423087053235515546154143488916355458210423806550052260486067570193176230993656640635696080909096861738902579158369613000748109112011488538746748611420521148558582904442403910502163383351723137448100612816793174832258106787681650051558235832781716811183484642722655824732244799651986485140637365052967497698935410399672423514588041686301736401004815393997558319253056972328812851214341352201746458576691147840897129905213356546409381720384214340326974018899837964662419796045098236536128397570418261118241896063298016122694354873663789078600580294752937978037093911846466881995763700417481401890446340224900585068848364907934553156910399")),
        &ec1024::Fp::decode_reduce(&bytes_from_str("79545316341974665917642557407930528117211905279731493398760367464901264517963823577941504188672414122744222696178738787238790519767246123832882219108957531179451517483820908521082539727534371020341363439661790215766691873641499457818202600079604335484613426416420726883345106716988038281578071894249598138743862562447426870063296767494556650676536645957277561876354545963770031579837926807696910043801531650936133769108817551350024508821135475136311692656381378912239086496074642285689344016033373515791409908462227359472179305281326290521149364027229289213595530095900722249569089482900124559034982006748749805128603572886011267108113681834395032291312749143302288173478935391747367207214514108758917900181490890271118648470724838458998379880992391392696856417910344305260278997715548040921390167204582479338294959373998743134313556445400723007036034627499800511122711399925380310792713640246909913757125652639566922587852265223073797914855687953148057735908")),
    );

    let omP = ec1024::Point {
        X: omPx,
        Y: omPy,
        Z: ec1024::Fq::ONE,
    };

    let omQx = ec1024::Fq::new(
        &ec1024::Fp::decode_reduce(&bytes_from_str("469878328607024771240913278693203054963946820173448440789743818047996577372814586918263755439911186581061220074508795457976846031503297687887171363185032057517924040665235209941292775310734358916135535926682992782364035589117504433470165557256346422769855897005420323613232885533929307624748750942540113673993814776699049113864624555306990551915024649211881137862447993281444649352035341576025200515269253576544208238274339405999417037392101604997727978562281079439050800139622784974947536361397062863448827792754212984833285571906625335918322646598811976875705028121832109010860953479757068293001543237344259766065885541131086091033359821641462170679804662818517942109083694505625007401030564014951249775901401276874381503343134192865118856838987758718957881467391375820151928847529736543552111607097470084076763377496632309512075526425751887996985632261979018930576345938985882555750685031103701092910116200247523606154412752908638556600318626095351626935505")),
        &ec1024::Fp::decode_reduce(&bytes_from_str("662252489274615239673199483974517195810244523200107348366469387733814866014094059602214324545894026617985989353596780357981923905913946697122305675701022388365791463908218503803210397761411458552029366326056207950730626563306461669720880406104917002488031494928294487875672114841930709069355481244205088595158519522143972282750944357787338091239985303780565476891786910579783203778645924682021585521791540114001368024915494854866343118428363423941409678230737329994268172656298150681675980464725254794328150337363272673071642531157707938971523053968708490370719656310976539550173878305009626967223759788381005702817130818357748286624219384419968804409207693031812224446931723242441242703313826937840678276016920341352875453999339002844280945582990806900258324087640117434209088050015696961941541793528265076612149942770732803732521380726236274159543556442377909910118707505449682944188655936696419664674637313409129647176339110207871524497386518261576121324259")),
    );
    let omQy = ec1024::Fq::new(
        &ec1024::Fp::decode_reduce(&bytes_from_str("45484633491233150023133268098416971148577086198016198016956134043798114602385570973444821161516230359088927950077272671134624301950250979752072219348329967845360622843522218823065962058534661326546096745264632645335713653555362915079700736175817721219520271278854700700031956845372843905337335639505199050639721010747455030256136404220016431327688165474969704669678955205368963826027982131503563419756372255854110886184303247298261438600588082168761616128837215450868242285715926586543225790330654197878732681410238457441838414540762888341813460467635833097820040563398285710615094822212572892834759298411136243551691664171057827426001722152010116915265958181192020024190626600088819596400565076521724692104537012917790000367791612052964341658677769209572026037190745051274482044718275968643812513655547366461828484546445077051752207380497750771569136980096669300384290586497950985748368663675139132853559306967633073370878440638860718919511675034918436443031")),
        &ec1024::Fp::decode_reduce(&bytes_from_str("709745789421363911319385860690127899037642935421773385286468595604236342264221565846053811435203670318106756956972943099643949749585731864158562049765750808412464982338904641820432739327679140712004930905178527895564113957100264563066490910609529935288256310523435270752970048562373664828720959266156924618049413866429204819725536041340313756576983487615699271706941733146325607410533163093203243418428079592904951274617452399192634444688838135695345930790467226899091943818250406262365617566526852303000020719135153528474938948671948705013840421072500688280313986979273903025383848984647042455142338047372104938118890766661804845895389634784448880785981290083958506534971010555178848804477462491400056498360676670334978893633259105516867740656919943265968447907807249090105286279803509057270830620913475862611654952310166744709235596576390794106333002351687200964401501290714202739365585579181344192960689345605106651711853284532103069335160829354735483585472")),
    );

    let omQ = ec1024::Point {
        X: omQx,
        Y: omQy,
        Z: ec1024::Fq::ONE,
    };

    let gen_denom = 2.big(); // quadratic order is generated by 1 and (1 + theta)/gen_denom.
    let field_disc = -11.big();
    let order_conductor =
        "4042606196797393975699355217738990771352034271698693305602269003605736667013237706413302804766694478413391496602930557238974193622367527420566916432033907".big();
    let quadratic_order =
        QuadraticOrder::new(field_disc.clone(), gen_denom, order_conductor.clone());

    let omega = QuadraticOrderEl::new(
        "178677445388411556459885840786388607062499933933842607574872575185410322090219160282469341635531300174411078706744257226582645800966388947217914868759843027".big(),
        1.big(),
        2.big(),
        quadratic_order.clone(),
    );

    let beta = QuadraticOrderEl::new(
        "119436364526424534051240264963845662478230839675235506908584556547624274130911598184978733873519669597002405302017048986168962208596697730294996977215891475".big(),
        2.big(),
        1.big(),
        quadratic_order.clone(),
    );

    let e = 3181; // TODO
    let two_dim = ec1024::TwoDim::new(EA, omega, beta, P, Q, omP, omQ, e);
    let klapoti = ec1024::Klapoti::new(quadratic_order, two_dim);

    let ideal = klapoti.secret();
    let strategy: [usize; 3178] = [987, 628, 610, 377, 233, 144, 89, 55, 34, 21, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 233, 144, 89, 55, 34, 21, 18, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 5, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 377, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1];  

    klapoti.act(ideal, 580, strategy.to_vec());
}

pub fn params1536() {
    // p = 153558353861355903376739945149400159890759701873067072477310822811600057854483093088020633701350673908354868267690260288981806824265759153298523333903013837479283951891335260580981401304893251842428571050645352267353435000162652982843087061192927042613263780526306463378459427424092604673439811773621875070533661102056138192266787648882681870995049343165573740135817334723340226942592623507386302725226823417812078447284748225033727877111731485472258179607516239854873862921925788854502682693276647434652659158957801674402370942926451442698330024856275035162367621698475205525995942196216165874209304800805468438209975300541380438579825035991141063583598949990742554314298877829086079538939107066039663984457760671970514295926674815279302212606346259216014182082856043759856070511327989386619017982646262159718289094550906753334035054649308223769470048667596408387551932285791189266120514621764180262487812206693302956829904564635852805446988024538086033830972202938674009730940236637627897987288486773886938275552602692894351112315757437323546934739217652312946988034077543238179462403444867912371307484976495825904434422763657274086923404909521080755083985503237933997154581611596398375955035759047955616155328777729637817854485598127918381998804833476270985783346555916444583570009761746113467071920770902042057488227710627212075684437803980518152801031911816369772604035246476973156866587649539821970333810064460204736511

    let A = ec1536::Fq::new(
        &ec1536::Fp::decode_reduce(&bytes_from_str("70832044832249020567463124644125588567221539069496285717032188784288051012213638658116866659862185599585861696676240527332476451913621654585004263543387573627453672070254243720440173172202020779308168447700050422585465138508277984855907211378338102537372626869287496834701381549966541979158335278632839215532996904280179270731540320256548906962515132610550402227618427937695995386755823635520020640069393542566451455536902208074946272962600285028952527425160019016836692190750698078796088163905829173396629324482584367287403325424233255545676630219454027371414663754552804189027971851779546241341541289727812356930020673402131777203286789247257037047379325392948164627693561805427454953013228642866076945642521955550901535012018321056616992760171508243924756759256860475474916203670730032071361258336489416235749700866545908830797159122199226050669877734906518808440167149349520333677605752218557570220040730183275765028471065498409769136478420662794720903810449115998928718933824522024712510064677560021785639774715108658489195424658202485838714746333232312250359471057209042109495829145885180650913917266120150476804547663565242437461705970009505795846598516250873748260770980015406134613340015100805685375962983238274445177555584876322651791906293260448038062388298553526175897374761796619533068510884055489287768517363286866072019312581051196013465316147847201986680965384891902038279122958319354456959542610145484010728")),
        &ec1536::Fp::decode_reduce(&bytes_from_str("0")),
    );
    let EA = ec1536::Curve::new(&A);

    let Px = ec1536::Fq::new(
        &ec1536::Fp::decode_reduce(&bytes_from_str("72737999952929499626422075364227890838981599263916372768400268510332032840963577038439328088703822244982539142044457308887374115037833686036330475203273847341174396551203248657035208769024718442746070999874343906261208884183721349208234240566434671325944628236593427536382527251468202507488663094439312229541514130546558333684849812849187599318302186828876506473369234126293855899789037020527954211078632436673768993971940044719951560171945228678542258397327851863171324390983929903897067141680837214957830043786431150443943703321651160734464315849576192888468977585728046476032676354181768448271193709778702378940910839799989774698352512737147840082482802254726901498715142254772507308772977024671631674738847650628818770013843805129616195844985906606312130912963268735960599834463495484130171688713451759416952930404308144669321102704011828533157328483762630004988317990117481189098239760178474434494191216121342727834191434614147968795092268956355759305369076499315788847412623421502170358155036061785020483342095586396415695678510859698330221657618951567672860213353877598918566632833128162929391792027723934182394700996685282118067937317694988634548200542928236412962654118249299787668846831579926259038246840204295581467617529509410346202398927242555677813678243725173344607461976930172884443773041008295707472526626919720427926153078875530805558320904922207500118106741326815364745411980207835931355119387028952940903")),
        &ec1536::Fp::decode_reduce(&bytes_from_str("16982979808222764865476630595061484542638961514339818052930062118225378507659383558889511401746040160846860435962962457143459746310058509477266487451343346355405578710686913188803941794656600003334908649931005700162947933701702108406696664034008169139244295364630082055708448821078867633265001370913728701203617173623483673978982966872177657627055998378378967630967646838117022443307149771761617766431474154526024066418033347276950796013685646574185685214743743509999120693232826522160150706112065145226437120812139171476779740091953365951963640829573472504741016600072805288630042725346436487052031462819375645819916829534798956918827089764817164181777404928469399974419187553903891787846073456263261121684355211786904782800650248667870636807988560250498189755902065117937663237320754414935274952235717625413829955061751677468463462920220560120398082134429230025660064233520371893905923605760522762292238238526697447889461151531319673643262324806411557500318354915941387837870911369632848350477962847599443779458213156328715782476254839397285390352106538577906353460603403195687909091480298514113698891059837854373829618272322645967130799691353986140691631433688356010424650890149038623984088011801227895607596398542633421409741763747447161256453423128792719027564892760961764446709216556396101765344270054123881868965737316863498505688957754371569457136591103255210882979819438032023773184543258142720809464158032586677388")),
    );
    let Py = ec1536::Fq::new(
        &ec1536::Fp::decode_reduce(&bytes_from_str("54408430667101876051121527385974509231233113982608829961394940247090991085257184106744941181428228644949307351740836916778136250448628073999282698984793083435090346395134507742179673720308961660781058009696065067423111045771954219449820574256882350243720337970184639510454315774876893140899276911335111588347318544703829208761345961422224439196540724537561526984761831908263907011890680034914242822604693517931612893163637948974747405849072189098871681265378617885176612388478405205918554730337996872408480569889432777495803884217642513497697253496913712489990175446313649998765217695337240618373377382665605267472275251526508427628565980456095290567836934014447523547428878192905952051306124565037625342437003912533198389935765168475045690838464670181060261163111748056061798253641268615533434576454574605286351757975185627048601568200938345190224216103115710607226709118405690834905410037220239486022895390944880862581659966865573493964206651452816608470486888508497686519915368630509065099525598265407126158195216427032368535036020775183001616272619177426531891942165083635503470391297119336020179994991427623665715354366483274809905216822243675489665897322914996407734736031649376635220602036845069973914596537918509166603862763210917747941280950372317511794503087068218626576026838198981512124214427739157738096293241234279701019997559607369642521055033766643718504169224334770275980671532297521703845882405488018264393")),
        &ec1536::Fp::decode_reduce(&bytes_from_str("44143296271733883262706787199166206743169898617245134715397155137643730156702446447050297819466930071080901023407365455435926310662589711754404999541912422760657037790876145451320667001267330215681584607138494696803263285967796110953685940936661019253199198488961939020969279419911320683876922004786123555924119470633832587959045839619933438393596706505189021041944993931450837868522028968789206900677742707109202250190618001461476850409889140991245902028995924720474886165236000518292531148720226503757971148022417417409780868507538486519987053772324562224396876352409550641585384025087512113879790093290662903281095806469978625984332603038469737573556919422314606215956746476915774877262574959275608943610660447914150923670339282541124547159932349123181908255226979477409142044740812874032165005149663268911049679901077016487857261032278090895284748778285575645657654717340745799743853350132421039381026517738481343303158268217916512604792519592375087753624494487696212846293985134158637650052079211109669835305869425726127154902200718773234565705051320852119387607208757871701082035235198116204848352729292389507520282204153795991737255627248225023540201932310180357925292324739475971647091246683129051672829676694441485812002063960425202023385527384932355858971804497517912837273370152972205097396362298657456803438322086647373810136842859467720109241095997570392021285335886799431271575072003613142246478405191169896609")),
    );

    let P = ec1536::Point {
        X: Px,
        Y: Py,
        Z: ec1536::Fq::ONE,
    };

    let Qx = ec1536::Fq::new(
        &ec1536::Fp::decode_reduce(&bytes_from_str("96198254611212719112561470164693501380119186276870883824847345538384196653770432017714165438735459708526857302809239795010530682898024314796588783969563631581531656022713338864187383030066908724898303252857225580571801767431307927028865521853256833968586123004877827180219747090370346432951156515868384347111317635533927166297737642556287600596692698694858533866128081741027032344008841058324199787153031795329100137118635868189337753437547314402245069551398216463694785827085906309610542770238406958912133440782964811678294995940852125755253586884925370233013805555652155922294080376722402538352477794158641355301817553633092108891275424157850715217954594919756150430226472869236039072710782365624040080991950977630356262579629823150645810908871775321630354727268552477361816543067644966470920924259733781715753074625507850130053718630891196000880658533473108410085960029486663832853085464642688362883311087416383408870409526465518219347223722309122636843662208263551068975325207877975615098260932906201427871544349035315460294777907049406455072633954772743389356807832334906524711831301653012889747220136077729311200944596644033266981081536393153971262180540831812727004172942351148623191248316014486769621738006533756192234319425273730721129442600936198849192007810470434083639989896964342611490605197588079148353888865379080122609269493787485180040742103808368390747270936909894442596270574943129906807431539844331600602")),
        &ec1536::Fp::decode_reduce(&bytes_from_str("72698279319503482886525956022499501310127152088475856822873130469027300948499416639375870434380260409306396080002413696361704415415658180506863270517605711461794816830528289555222585123571363443333461381529368496268594926060715067348841272153919380758441443215873426935699719752410173816740877018164602141111156198480457908647204034108407448628061688500380702226204366249962784990591187629780504030906234824573443888569663853425687811090506571822459322280461922416196684145138569996857204385715087354628122568220502392425912486141223874118018355543974090641590446558047882786754084861242272650661440333100353802750229718693605863744658192374237375968267676530311985521944338778862178787387770151269721866407227521138521913791269089850508199217937801290802406696981479924536544765933611255638342591668730835471018036925848022189275563177631355214919632213794128650394235063740576536705258694568817200998092172181032235667277727869158598472986843810666512597686099801261228692844392242531767744602655439720333816472140664401685538643994338140479540789861378518336135676969013905962236640876556060572149319847199453412704044717427425476843469874955362835891462833793409610452370570909299952358526569430512608046174300868942765394745390343087437602635287839716498457374150755263767067073564509326288312278805483176228994123463054642919063019761247115597029671824008398288821739803057761577873582666615985884299763177927676427717")),
    );
    let Qy = ec1536::Fq::new(
        &ec1536::Fp::decode_reduce(&bytes_from_str("152387793597171611971731486865070170731591302355671589840103206256691784913918228076148517016699271183104929423974891119429494535690939250769989838536840324646661422627192526416976510953173010233333527926852589861344417736982543692385872333770794666756514348382617626119074886372307146391303634281474490238999616777446872686201816814212978334473657097010665960960179776816754907253948826652633522494172397552511962813419167618209320169962447054777138308799377138043728953745129517270816564445441107758026891335790269064637352015680404385578172988312576605374220408985310912704064369006010615538890461413104791712488085472684804732101040631544920184409306755273052712583089083573182145755596420374055703305194151857890714331070189222415468429771488842797968719763897106417147301039130554575020270004804442726129356753973140640803970251825086234091037058080618064723691549774145547612931345136942905194198263708296621661625943148174005519925546776810151918702892125495256147234717340730486830775977001081237292928176149990656100713663807350253501680454573418988423782660189711688485293166905483012740977604449614808290892487532149990771026328089377753509402345174791003594528816435385011885219910002437480448935821307498871455240790264590831758184964996458012343024563705847779708062845932197418205519576054729696683677512231354427212771054106113033040130974719534563902563139222803879147733774084669578267965354189640428248034")),
        &ec1536::Fp::decode_reduce(&bytes_from_str("15998958902139475011901761904771104238350060586760709796752676429994412817005162066591954282568187901547228168819376694984215928271347023677829912879803604107886772561766337575378519641681649230541300585380696934815219147041849913593453170653136726413603886775178479621519818846136311539162617079546115243681289486798200829598200344788660325215821143465458402459259083841620863786193906638545724090989668407963280310888783474348949282319571509413762771094209666178076579516089713768329185851133178512003268539825241530967105060826263322150395695979553874989210059134572732529694767741002422917488924141405441378244097879982002169353506773518614555232463975665087471817770327641406045999240514281534729123894495909822835343886503617201770267034195148584691508225530117261399747108026779884012111393456979415199968819076381930819639285156309735601017959417125936970138218732617891812939296504288765107799243267354475839159458454904997126120923553406782093248270154757404288414308644169513070130600793581104132076893523225526476940547440995037744942953039196458140640582939803924140035369709998478010865960326280225461567969455365642553301692555449113639258864036850386939917579897991504573848209445288202141294447538827592816828961073102815340928599119586454389403246839257410736058032401816381818758382956115018401246341119636226169313960931545391865704774789949998455206660318061712491540479521560772962018740845314587882332")),
    );

    let Q = ec1536::Point {
        X: Qx,
        Y: Qy,
        Z: ec1536::Fq::ONE,
    };

    let omPx = ec1536::Fq::new(
        &ec1536::Fp::decode_reduce(&bytes_from_str("79126648703023100714623895170685798027700588092227348346873405947405453918652658782916925596267040542938603746393023986028037934511568460634491968382538866757515074830103563044220475692051704736018359835246077866123427252573583645587462321998333426717786162577878381620756703683439826742433212611095874495875791453581977024131119830448224371936721805908139347138761293391245634739125839647472969957579834251121696403796314102951459944816364936897125690085433036327262429933387891636975745352840263016773170043787331016966447553417730405531344226736999381988601768183863259322140103156851447689505552750398537782098079897037899013976388353896749195465395172261821465243521498203369622822866308269244491530686360303847569036723865568599949532635364430377918353743833405970820805203160192841459475024931729732055105130285764634685587500209335274170074985889976438321546744573788969545449972930287532426158164239384297621750818732202774901056848329194018539670923751444857541209558301002481071406464702363197276190138784974677847689865384849507340975499448402011442252462961915674299018461699897578106148260307994845501659076731317133914398561280670007020871880685210312652224903498706591697619048425826974386437860726990669855817587381373302365974570266705147948200770879434687319878138587373367111084316116273337527011555932872758494186556891057746928029971351707079655344124273123085887622321051349551973608555598562366075602")),
        &ec1536::Fp::decode_reduce(&bytes_from_str("48645839394718412964557223108155322518073626858088565271639859542881903178351572971694378667090061920595556646841444789068679201559737437099120885835201280345803363390897215188521107419676017371353021689807595927596561775740163068857418174590496293503420266471330408928902453074603976736483748605579184441085851243048102293841662869027018058857915098971280336778227562346419830352974215978817336693040732108533881853674165461669811249600075509261640996947598481813816186348568317905094358036662995769779021537727860265355736028661400393282906414487592929771383777370883125469127422581929401513310883612209709930534481784303035052187441101616197616942805773319471019628314856934764897156088841929161095390026177682088677354481302097762319640304581056149948332324550898487409760906967622141969313712447297868726210332904667121133104430852931449889135381924250220132474099190063118184187733036913840440789097705709954490404531907981340628296473774207450798991476844300819466048032340351188317045718439912790760230982988999325820278520070540408106974226016021864193505990812266905484541820345278115643905947834425850960645859923402365296470762498414075987299488008724655945948732887354028195068395749125974975857852244701550080003131490302965639864051268467807122252598667061073503545085207011678282395021858609212324678666207690539337665377307583607025915465899877958971736922673873408241323050963801965660109567012496686138279")),
    );
    let omPy = ec1536::Fq::new(
        &ec1536::Fp::decode_reduce(&bytes_from_str("34201719683524308457325335569370314292490325528867082170849291371406744123206167916786713853423852562822852044025046250048027099500977020166404310183750697894441606761821045467861016531955225107230890019075321236235622487841398027324774024022568050783607304385924073814478244883739695014757158080739824133674210182822196050512505634296742519059166299475819795412938613380430364171031801814168131797627056127965875154146856463701191642932341788673497084667199203208369259269485860247221668006132911999151040316219937511265202813178005149852470162862017753954091835446756520491746823673423987737590164682238790966778613308003610891731765628777768282944649441726699822865911504881674341413055104219579837142228174488833395026811486154809074825518647196544027886012617893170899857946873064323440579591523734006228270376375566522651629611277229773870634729779191672232231934387312947883389798275610134674125860008672314530257400387746407519206558705107780247423407446806133234211388642662986086713162691482884170483466573718386850091947822907780437310602642012565899942808241806781774788549575034801673179075206638827776213187976541821348464030785601154700192874168456805631492895971476993930123475803573741695525414839801633321754375299101505417771920047731105701984964476815122395979743384425375371957845563111976840235956239407940814510994245766612641091337721625119404910467848693896213572149656356572787750489610191719075931")),
        &ec1536::Fp::decode_reduce(&bytes_from_str("68069173977493347760948634517507911803761326943277646390630357592326415779487040398364269218191251653664023470856682780932718916410567034003559697113473491164205262012090944185076027889246814475224364110778878054589168090792782970161812997652129224708716685066313193298622065729559355741987800463547215998959755115985920689096121275549153962483226987188819422768877049509927015097162210627559030522511096864097830781197181318925135381059742544471351019909576461201631843196082108945731647591862594871162317553764057951937574500584790349135125007316919893350263987248387463547941308857767863424043675429232187160020466375544930099842453753330686705710063073978602785550501228120371099950811831153905843486613170322006965096881722156871350427986670388882987923366175193714760197410346737967880452158941379927415967087677489138910029538598922952646066193272497911823397426049353162586507881829581654214594862639107778967233561867942142094367069800383805584576844054458023706981010585871962296813733703979064514151871055095734762191886278722450397031978274284078576295280578915711139777547867313285979349314448343783260381412477103215519922372167240642251564621295754436722956312898008481259712623130756659417159964346727007200439314974766808788069752207879919917650262862284300605573481145444611681546046359716250355163277257639775260116925596016539641209693921177363907319364756942158078706980803034934036343083266034409295744")),
    );

    let omP = ec1536::Point {
        X: omPx,
        Y: omPy,
        Z: ec1536::Fq::ONE,
    };

    let omQx = ec1536::Fq::new(
        &ec1536::Fp::decode_reduce(&bytes_from_str("109198181262485050559731693838605824591681583644601574348161458201652218596662651023559922125621877694807709355701519047737669553089289747927084588330755176098982710612332042548037510487008470525710268071762011769070804593601406590130067460083695529723987685017101906454643376329464216735750628194498914974488153132137562014884021403947820364433960254643229199683696005185642370425793528122698971180497992514273714515492142131533073989566295185567622546274293752312333323232867912295389891107663186896731409562489679313824994162687096697498637278945264765952442760547295307435017146264202163792469158367664063779188754826281099835465707447687853231097761572576684274743407522410667840775644407899142691708708203543518791414391561943371333904408545496437018387808375849246725673052935617339464608108654595073174255938861619685560976895357184685196758985118628132013525782942885534628679683782218557554369584447291309995305664114440604656968620508298788980627898720184236949230252459682149643575403197948331102276380760877953924729954307631766917199458879833230303184445106434052253902838610215502815377583683681235540368441012937124708696667681962961470827075228408677774954571905138273298692016584398032038696727806091663301667733239028387412669775175112976495002831862980561401348352530795369566364223412614525203971398621182639420807081283391193771137078105933775351762420410159189915484738633443651228106976753206809360721")),
        &ec1536::Fp::decode_reduce(&bytes_from_str("66853187445851197441865570613010309753068888752926735994149265578362565937069008396638098740112552762409710580989131332894018016829497684488491891140937353437031802952116859462829094513057998762720886291990936846974650903473556472647830468771191072620404299492248409535748001904872949322365228238452933573692313088545365570976781636729766830623810272127426683359744541275532164416251994854091333546918090127928053627717479535308667750650722441148004601415352349558985151774837926644068812175652257177795796353711069590222561858034908383666028766503509349940156766609760000452439931428635307873954621584288494784427143049273921214359335507995320356062057683218243951852637150262350986393479860663817040062554387382254293236671231224335235777767806461690006771342242849071496164339240216725050158542222647625667674255428400964471132983155486961286232497917214974403224542649339965857048638638160810198240561176109015773007664804528975391121066438462605524329539221835275997962651650966859147410671291705656813241761082274426602043389736739742335329560130627496440879098630718427067472937832332479659859326321048845901887799117029404947509126632743881511140507755400386551531348796858882264959066682730557481495881188253471966510384162043036591247934838774742993277662381474311405261400727055704188637904197497950477281337783082367076951653826945156335516722670854833428947618396576815946404593530090347935488897944146489871079")),
    );
    let omQy = ec1536::Fq::new(
        &ec1536::Fp::decode_reduce(&bytes_from_str("33508553973170331604085316288714477009748195463782489497763967695674360448688708295873056276762231599318645298535534717874447048644459390723476603416291514263137854125701860835272541959913889342892483639968641560151830627621626184317186912512865834823032609399036559281126200441222727312914929838576795197890841183083988818719717519757087644739841055156169120572454009695351835959015145539269778070734558969394740913854804246718666583671653268262038091570396837533709787871800907777969200452037257919556378357042113724675410651270708721703115973617843709036547787040263522595750142552084715756425614251979807724138959316785588854039765134910196403995379137078757229945923061344794814080633145526957812849035407874505897122109769560454581729894718372566425373614743443951722990249211287229183604150212038910484864955563979981065043570997005437213723321711432798895173623191880079942739420309106866615253683511763876446544087741668871883438974594455306199588018981940107258559357651417943345961219476271331620754734876728479841252675664988592684837456964540862173476315083435316548809005891685231162520373533841088329038067882571134035698342380502036066506565930739772356502705791157536676007903740561584857965665152174331067212083566714972368082318429979929988272255639159108698239744776014105961496458821887986740131561029198909709554251906891878230161167684519455619802957485649705838597469892861039443626523605029015734056")),
        &ec1536::Fp::decode_reduce(&bytes_from_str("151656552654324495990331300799856033719577699790206325282545837381985506861309380173823007118048966516876118090728416126781174958995873728314722400222902911807021730786596910542369181026780314283008970023648199136992342745879111971622430366313313289452656617612322529364023068735743907768383074505281862486197291097450368477534396542790438069659692871674363463309063747610019890040751643469533631346432612660419315213290255809078552776819323545183927564492517047905179985973400009525699844894763741469995637639204266208832339276391736360796291908929193041134182355230780993006171449332648911994364230226238312216231050571755105335585412019320067280160080373413631849986643770212451691131592906769962595158495617679241398489585992528764440711450321044981649875208972295784957466455429312308370789741163553245947213640915311868047049910362830456379427505285873243024474583379857777452732603506291579808894181625279905630829435755442715064512709973245631818395783379397864702779572220723533223830555158255557424489176023394673390097738485181414061094390046959485376962898141642734080233556870062508124245449339033782383545957394832588955398633619607251730944942396483636493367320753613420739190769920641817519512633762055456215289719784275340541453222115597066724711636919908952563933789982841030933484148931596123914069881153592712108272435231743308874757217955148238124616337750428246198764178770369128324190099336034085004127")),
    );

    let omQ = ec1536::Point {
        X: omQx,
        Y: omQy,
        Z: ec1536::Fq::ONE,
    };

    let gen_denom = 2.big(); // quadratic order is generated by 1 and (1 + theta)/gen_denom.
    let field_disc = -11.big();
    let order_conductor =
        "468101817490891280421952989623638844238663133413330985226613261923726972955245205229976457636534860307884797458355660468530629448535927139518046783625762967033076265612695055462518863556829185735662861556760584757766402571928032639".big();
    let quadratic_order =
        QuadraticOrder::new(field_disc.clone(), gen_denom, order_conductor.clone());

    let omega = QuadraticOrderEl::new(
        "482618769278521632717356556734220461153777656185010383763518679239695374781886466728883404740024654205623555906451184046980691302278469636776343143024501490323284388494293097927596412379761682309268545820640951201211717042855390755647".big(),
        1.big(),
        2.big(),
        quadratic_order.clone(),
    );

    let beta = QuadraticOrderEl::new(
        "554322581207705343797676962293823799688887056411661945015331280608211678782815378553801272263459842781695334772303909872960018337414194320014717950757367798240929901186665482489418750809291065489611773899235354299634851102629771568087".big(),
        195.big(),
        2.big(),
        quadratic_order.clone(),
    );

    let e = 4724; // TODO
    let two_dim = ec1536::TwoDim::new(EA, omega, beta, P, Q, omP, omQ, e);
    let klapoti = ec1536::Klapoti::new(quadratic_order, two_dim);

    let ideal = klapoti.secret();

    let strategy: [usize; 4721] = [1597, 987, 610, 574, 377, 233, 144, 89, 55, 34, 21, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 197, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 55, 53, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 19, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 6, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 377, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 610, 377, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1]; 

    klapoti.act(ideal, 1000, strategy.to_vec());
}

pub fn params2048() {
    // p = 82014203224259545225085636426054254197905362219302006613283681888259410043933309642707178333110889969682612688866776236705410980110701176060896340811845644738440553570681151058933317386025455963706498561794761130643451160633612226767900018259794776037965781157015204889319904308661484877812530439413228724536462651214337108416854764950253938784639351508654486176367914580847325392045075900252135933903758700403287760915366855432656826160501180273550201641658479122748226565543583504734375333577770755142100109796804653952945405947482134282519773423424185120654103698827235921165553516626993535691948016108009587566611530553893557737424191168053782142615247618222400527127968856374563603464448471882280356928396882185147583785448116825576209521742769597661367350176329898729208925901916286727190363321222969776931032481374019967016688258952626894429926582050060706949749831723080168938653170025636958760284806237371299221904160132690836799108078270683977176825572051137484247421173124069147197606765857616913818325574940216370325077680814036598007335367356495332550195428791917617584408023512451425817522904090308759643095246561564068111670954236484558236595055880179164331339439530841677097878293586817250032019938460996079573651030040181656390472821908691383357692843376472781955941699987643645111501946819800911167441627847214758306446621963583698201374460441081273679578942711075392662536398151818368975385759792655416062645288724633540143909390462544218419881784352680723164116447596997375316223076353569266843988706731649943067943472391644095410324357124061820178392779222566102869736611308663455096043049878404388247450321380286032154318664901123479773417805837355886737148102179353402121568200453190428063784276725562953423895710512139271806582219915672134688986790373406897671339642770513811986858446210163461732371724733853210916158636113976217528210586897064562524159

    let A = ec2048::Fq::new(
        &ec2048::Fp::decode_reduce(&bytes_from_str("26214037021896144061530821842664610252618021581592160350198036802097774639367302609222252117843218247221121246922175830589770663230402048669690898220338448334900451015598598141876796824279316755568138335303548914786068794853208912029964534836204124649976512111107669817157473442240743768468370117967914157224624518786191881201137117277721236683376178684712195945496418907592351587903666589989116733875010220054747848026788615220409301836934301947758915927893418096607061114942575661097752150646654920266850830095180289265833121355406342810104802741688138260900854525789871582126787700816000390374000453679027230817567165793052694046943699606114963331652808959507116106471929775020710890234458235619756800000611238071659870197039874987172994886630027209784844666166962334869810556379483977198895932919732247061469464063576217845893113980318477500315632124402363123826114836601717945040920506317284622755627322556696906298320416074253429933655240154499892480079954212685863687234579187136122949418842120371381500332033164249900109793535743627383028755443470365342235437355260728394333095861376506910508141599900526840126490399585342430301731253291710279779242090340093939186424511995936045085692313445303892933649871378710540716647577697808492186989351110501063699500048391092069161162203576932365054730058316176522846592714410035068219530188038733606036488431795981672192114393638162100675185601350561068676747908710262792574393146559764862861259236841122940432598194228108578355636278089279925809112087759283810719930112351838954455868295226331174972570477022645636385356372046223008680879148211795497499228241378146670906094038461392984946098767763021073315663205209754932849935566168843576101752971097630088138653925371334332015017239140040733017766540598432939175661070507178485003918444829727857386233271651411804965015115681838726656179892543058693927789133865897167881181")),
        &ec2048::Fp::decode_reduce(&bytes_from_str("0")),
    );
    let EA = ec2048::Curve::new(&A);

    let Px = ec2048::Fq::new(
        &ec2048::Fp::decode_reduce(&bytes_from_str("42172950145099840808338768647854426932481643296898308468944668285131768748127380260511634235758005882490184204041579467813500962037956598893668712892591412798307704686549181372908654715971011529545513664043903306635193807379355555631746947004273183004291011681384578014214735978301425718340003413440150485127018304780037183861935174693171868826305444171201877689315943834126424239869330121951602183099447942558580030065353342953726760344518956962976181683819970797542116623751429186077140846247649502592964325663539449699317672020134070493274106992925133808305749422810547016224899533658327323633132210470104355593279951854688642615707766110373839280567167531980998132197655457849679584521915021782742982144045059701216298544144607331473480756692153095009643656096209057074547636362100589991451641281627081810538296224653565264461542808987555779411274140859178713455781687586065660649827080507280384777044819242024415505943234752407947570453546974411088156816927516911327514554831988629712877138942565802615706566759262599613207430172584754279749848816732337995710153691697901614950801991064563809517265946129351321210715802387050672425313253262090580659539351164913671227000080557793335650102341507186783731806175406680571892469301651220347911089424799294259193551549477248463694437841693738995767224205814452201012100306360808605195351699239748796936553503858884272253710474738722260766278132875878883551899406041556452980238961869192787405777930477880565370808568730526770734941201782884920469628742146408797803161297182043109924710221838581876826331679337374922168240868585484029462739648675370070008014978384798893388147980310816726724097323968437220902831355218997703047288847054412188420137359279741807977175068712575517087001158420716624100958093688109873765633766674641802671242793886352595648180428397905952563078541700394350106644828873908822100220559396841645457184")),
        &ec2048::Fp::decode_reduce(&bytes_from_str("11307422524594245429719303820657771054529222204244103004253037720681259582772884290265002641491522195087336783648161548687353173028784058112764793052731553026416208733371530165311296522102523974152496327144132893428956928429508364291259770605693809723528685336125473356567254041101853852842512435983510825087301040866685170641306065323217342688867809852808959177614547272832706325381780568189102265221685291508040821371973071799516061886291076082090544901694934030933926834581785654014874150307432842767158259628699241955169531777788753171172967302622603766229960068782731521677913267703747661908743448346789971049771279526243780476391049072150938639583856177811780879567687443283345221489687307662298107289273240855391403213828064191304614116837452723843564404034881778877653345183755201582461126142901924915510150884996476234926439953568671254024938693998883429193309548245079255279640003896038570046534478045097801224913947999974708976806226192429348931255875746935439317768156233367113324114689651599340519064491031148882038855990240215108649373935513061039361284733915835272009145422767758004709730642490709247732536121135741057990119778660561600647951587162632671633851511526704399172407293649025228348790468096618120894837525111409193752676590101520378815964651373169319425851868552750949889852407235682948473839480262964942094544415526418300842527877176737104545578035118485830989444278940143296141143199209867686513967470198659150115437198342404094907678276498301475333970985118915140721974060930997349956249083979631422419711995473798864255671871412050638895031863080757939989143655550539587984832030820338717327195704097314071248604304354482694677683977096194531001624142509566275966802449040770345666119051477921180798564645959377367871749990989625191756116343445126589006557954155396575709367370953004559569812947190756314250234783552550445005644510564328331305459")),
    );
    let Py = ec2048::Fq::new(
        &ec2048::Fp::decode_reduce(&bytes_from_str("26115630947454671810390023850704014247882345129748157628929000596640049195508532271553887902687662401559925157375241665352390061887826895362905436643511586827501660288534385984268192259494723297367987795258377949329777890759877167809467603514870029875264456951859427664470762613940942898375666771860873155138554595166372060971059858143739617663217328860284565310814807543567977980434346911818059127388516297630810487862211178520508221236304974277768387091046785770968465307002818034798215017384415604357852072899990429192293482111495551323051116443370000516394279806640350760493282322421644012284638560589160403159626126439862866131365448735493495562763266086591762382845800183960679205684399098738770407434678822022138928490464663127531689792626070019082827286477158670945609217483081235986304131004448429548935520688333675403444245728591452222603029153613737461995664362407984440601276449720483513322425624417975240692210961353984681568197665945760472141975738545043095075736163214897010923000621432073708529528736837732469577169841898932387145013845772336591918555834821551708770634308004301150214371438061103667241915661707346101316256960789757002939724847917533093723792594600139872201605237333545532328157144766538915266699869450499965825484617717908361092095687037724213860671644048927698284412946398053625162267423584868512272901526583913721258148272163746219624658673038679779494569165007623536823960672439125671867661161035409406554350912818291498537247271924337403206125317472762284563723840569973302059358960601482277269625841092654550928616921797464072328111660495835931019333698821720345814274532634941249670923825162781572084086777994891426748233753897603935450657801309930724421284276079859827138078348470410817310388286626756886767296469953818085049683050253868087697122604169281385518619686738204097741767949442053142185941503017484914899831720456890961750024")),
        &ec2048::Fp::decode_reduce(&bytes_from_str("37585658641685373523010361021915480452592030079761519073529059280206404344688994834478810560776473473297862785360002023616196748098567895786353110185465760958792529277921499488274130801418151517824373561958001741209440233126165552422342627102758392209271774269240652733940670962967043563116869679085043509391068554248508586504065885053350953837825740398911964764701141140973655575395386643112131888026430113102615560692959307638256414579925972836564986534874471231439422015440848844061976337280040365420968761750121644086781513017012250664592822020948983610975090193145358057073333314634666543228263959147117299417422403108634186419860620286447084763677518568296408656967807313565809009947068018388841658191923970905573368009494694945973178190614545177092584237102547972873694572768505764236001770728006053751471361769570448879059451045142440524032464271192702956654286940204713857647189712075042815060371243666915549721747586260238257229902496949405371228115005853592638717386993885029044007561135323604509229141927111816020673203000226997370783756307837226385261719665191323398682645115574630331557355272730056075151500414728288526175144136675787480461673657562531292431377388475734294527512708181308026655435042107670218964209159187490585483951028063481528638123492744232953676212176708655710911389440510000814145523365329943834930559167489648747638996234340712901852512219185980139165637902920029331617924231465899011908639232042735900422509198702954766895289317186029156480343555730682182259031976126352105284531950743721995143300432871748256885709839165649014276612788342865592834047175294354173972212099216816452280851943827819211156313780550139009689735574502106327480658936228674987871762406324843260959336783034631981356941997181524888811183528922941842979112098559523461425240763706198196198593732048444156797224372906477423465227843744317856203285921741606778713213")),
    );

    let P = ec2048::Point {
        X: Px,
        Y: Py,
        Z: ec2048::Fq::ONE,
    };

    let Qx = ec2048::Fq::new(
        &ec2048::Fp::decode_reduce(&bytes_from_str("53329659848723529831675924146809293194027190631870699399707102100284267252894708664473962260430176106348308304675947267562756983332529343787945318806460846007510967938203602480665569280957108539543024946780778340513244673627478480757955305419313373393914629121338448396406210643889575718619820929995108113448134525403976004936236178953486753445839384062663394428844180241408801379604809116758036190665092429615192250941471487570355490642347802338824960605236017336390313300478322184741586235160871336382188018520124196142971231552676384100914272927604682708324415664273086733415963024388220481273583850721424683903471822542032556798323647403857080332506859200823246473498685417782216693697858904468161003233089028937850433752605953937537667468488595023454240342614790883087424979177196356317877063224864476284625628029201696295529474030770988946791596633889768459448953450542144474074607978832459212730793945223037903603842931569071801370314986660143088190767487383356997271013609540150229868421341485128922430088638800278382010485428043879684022512450266139148575371782945976742033233383932178223814989119637233150059956239992907340937483109716283981866804736002720601020041045298780063546783944890744684951367954298326788827470763827317958246469900351058830816346987906482875310752767193809931186798797010756436297940661015266891927709934612063357493570155115349586389546822990806384300715436042921526376563021648935036809611095092795178540821063966893644155341224243002343536860179941131498945629791870350124042124395362683458691764077754489789871269840183896154031981529303581209011455401018383943137704335922533077183554445153791032073558774390129408778228354021319006473510750194466838347809012558363165699037791975943693376430499817595956648439626637121006028173532465558070022058155901640805158584912666124967855479203735340822227240899194608427606556494442222997673711")),
        &ec2048::Fp::decode_reduce(&bytes_from_str("25525231460764149653105641738993593004569331350806443058511114985994995137755662660312074651771717030750427457777921641912552374839212565917983082238503797192849447552690940122840625568008391743359181669736009207956681294730057707639734120598976555789803895036773602062410309596361030695658287295112231588711849442148742068824634654577279637456599624605930207206527139106584759012012921563106545995413508187823734131790762895192524983899060772916606104111934056098143794671693293797306653428616665341367248845297390553076536249474772318258151403945074329048000896281792079334977662151137844957851822699182642883046388451698952368927609771598291087354763383434584112140968093894663879184348555862642230851588506162244001358296748482648668537777972498809215176920134639514798562875497549691317235809025007011311965309650260276707044990808551657136129275255905570626062841590788944051099110012220347447721210596761119196437522601107228148546791127411711895647483527853422597752998179923529184216879579154349648354178039965199569934985817616750997567361302971393940498643324163691886961415709158031279360543414520325250945317246994812495051154786210157499393053431431892317669218435285309182017491650568838142984876693180735354792469891680533089467657722804146291467820303497086059842828830683879660788922233757074227888446043234500380903186253161192371613674801228552092293574865716987891631184037402231459773454661881959079769532649122867741142440457889937052748542290766781056262480700714333499393639059768622653046046016541356259105965404851081597246800816897043885317898593606746789262441627396640223755814932353719674326983094564050914271048767006419467301965499354710690201172758210976376717098960950893356277558748665792787510850761386607488350087960015323506969360904610558307714142884562325593140970932582056606764111256500983149008291930603878644798598337590213016622441")),
    );
    let Qy = ec2048::Fq::new(
        &ec2048::Fp::decode_reduce(&bytes_from_str("49206465648997440114371594669344638098034135588793405971685097443673161691463546106702393007965410815279006619137581580580371383086106060218218445972178589388306299118452428024330450239819518403603843765702778901324022546837223990183971166983230708287754147523540041391283462278620544066389505227208913945234679672187154951032866420207672091292854756491241872958250393057161822180788265923937052253752046233390049874036842789972307434849165326705409556497394902591022367363310743023387141534222124215194369201808729226160237104335696543220393816047452133649877039946748226813634796338174894343042253892141323767664331978703377491552808171886835605775152738517316478992917715814460555716502244031895677719338462252941778590191664547258131665092733704567908008611896930648754949446562847572782624773170277188285327572376098526761592323809766330372631397716821445323583285425167703935105904601919096951336864359597112488153638612764080588649174249251519988019503876152740420175462293229178882697211822070717735550344457426787721918940484544595556509065549032037943746556667646810555211192057254805372903017358903248897601639755374532404330578071669176103162250184719828841640232866283825523159521707399730365512925708544466802044412011192139010295704441353730261883041305509107744943758177653957519267864522349502511388566693759364571841392754440213200652096748392246793166812147832313713811618950317543732985562574844590548662749436098381958797371650586744258955170048661405975014404719754398652003331769448602215716437528527210428083185431334461782190599583758759353121592897272633142621808186365104271865035808548252974988928981270129776275461390925489463914051311115197948516145098630062970125888385447328773285568441396996942259744658953252382830358104153799026012296836279098052495236619425477169655906861689210765496317498297856345997790864680719055058632207930407712311540")),
        &ec2048::Fp::decode_reduce(&bytes_from_str("61743307874173883319673689320920368631736897327252894520658514882683311999573591161497937174910038073963447083282371272334421379026886924128136559591494787570984237147950018177465264707320963411651167022951746525992443162862183271151817920932947465488694984267670946085134009029944292691013447213138309084189886553707157059811216233299591694464537868959316793507329738653017930034269371880257253599870318210226887616921196509575152784455200342777364692845223834908494401432067241665601397203894227900117498800841163330970269746127219652974648772038186336354930100383532274031109044674941478494283439141924326815625777375896494098715807756001437252380759263067093726204523464487876417648450388296474837462283582306476460939143902049309808181950679674372448761454618650588285349708362409602947569681590776572718975314368760295177819635875701889443682926264263549883148474170301355039045382416703752682171232281838468910893853808788560174561431816566640352570764026092569657836974159306841432018742861430277358134564504124574642727445622449397358429630992104845022706683187947625681721690702552829256514920774604106469559391860907179278825290971141263647243598067920207668142288949324586065327586877303299901128761783825962439327627498657980092009649452730221982679553354222162243480848823151577991936242931176100111075633684192201558652962638387451334973874783720117904262069216857881906882467847408529301123870399120193053462531445097526185396081938832670953249844686317016512549558884464069819014156682823818257855557462795660262223013662418953811197731720273548242944051769430204743333616978708420640389470849779099342707157475464094925192231790168478630276077676653154099931788937374359356210859146155111515500240118927868567330825968761796645507367359215317439942179694146454860475492927312499682165876817736664374841900246204438613162851488124934496822422424682915014184201")),
    );

    let Q = ec2048::Point {
        X: Qx,
        Y: Qy,
        Z: ec2048::Fq::ONE,
    };

    let omPx = ec2048::Fq::new(
        &ec2048::Fp::decode_reduce(&bytes_from_str("28778963533692068832275061296539000416203531585884726022695540860649116407021763984766735852444726041058441410761348302179188679094897001817926774046741108058249357659279092277275044832952750497522166672149187873544611959296297159569729209517227633886236285367273762279733392753902082208276494916119294049803415186131190797372900806234973950689426281195801055051790884106390675721216316045555281394508712310111096975063301746170793012680371600406563837066953204835033487404296470123151303628345286607982089454335875328856206729451070570001199826146311701455705050670758136346317901046823053330237177777963088232038098340433648156296169704873978424261564874489868331685552643230022891904641948421971367431515198677961863452746777080177879386396940517407274404928757946047098674551534513108287806936513665741485866827519858446930059732801260512233007109337675856686743832894810399151636373507054724076330128971585428547707143039383090341119858540755605803857466233744684360762700359033141931423374164667270646149503341860642418271283410292414620236727559433419466412492500133527177180495392466413201235755348273356093281419105437181183753639536621347404467832105178095335920028036278900298946143491765061210566250095884795856546221591910938364603953410896525770278597572288179558942827519323325998654767740965718341986241427447616235484483084401322293606102857801586808043362966637366406978374125799963122900513110396783257257135583426874003309391377914932074668971273901398125142982453666640376276753695392941148380113749735108696150066904496785170990576538837891702608756241416067013238640047644837691248947315025448955295303844272115927157434463507546126981476410602184284773600928572821980817460906594492829586332119250448078712100901892025616999222946483081596804975202354097950001689648803936441297558533094465799689710333753710411087069835882649326949286459982091226874882")),
        &ec2048::Fp::decode_reduce(&bytes_from_str("30941119477261081151413042201140653886839310425321437165285065303660216670187759365773162179438288401783242002792912413460937458841109656569725149130822507379329405598263118024580732888877897693500590669819532776154204723548970527341276350089870179653408281068799156375089437540757847153634259852725486160106056291998448470947066858308137475266346176087080542186872588952353463743397906960685535387076075127253887024204611176625700687634864372498295581473882105693684457592399343119980733370155131212957626377688203509893567064496363340027428221460050189474089467647149347949642942189264623389312705787659493472364269692214852420088025899569053599184940277040962082206523170637979933791329415606563368743872465761083581382215106357460566657895297478856508814541011527266925401064405737947326272944855048506651849794167237410166220959848831321805027908519191954586707873770649642733971502265333866949690417606820014473770368745547133785640277090916815143256031972670653323868365569425521293726299000373687848216215129090124764640774099090661162563706953244192926449089605625404851325189872999335838238284615022112969186252474156314975218091757110615188452481171114766502905347194369755505293250543348287658335339348876146349581612981139142917529730594486278548216620721346575900447441238325183799606042311549351339253575509296050843866539237543535321896577264652741600348463771870829668739003510892378558243687746724059344855234815352990117840434457117480592981133537102362017237302428022826321443192372855927017181786669480032728659590499777947231622495573467583401090718978052984526484773290269572040729921597515316350529276121007286267852710150767689558534922394128030456036806722423167858126118152457374071284496630657248554000883221180136888613801513939343042808146914701744776834536794243245122717763764663628944071993344205967602404724349675766382600824076457421957504626")),
    );
    let omPy = ec2048::Fq::new(
        &ec2048::Fp::decode_reduce(&bytes_from_str("12562118929322892460485659662068254033511375047909228111789782656989272637567631006891500067900928100007233314062548368482492148658985272100198235808300977010159451459412394135335743168703773829179532698366904536555121185226192971737724281035393618468966780571078087192974215036755280538824484254313284010433785819785917595633103018120692118849311116547955454208190040944699713111261407794039698841131708844309759716977382303112435249608536737501516779459247451538922160150874654276267727281016602971608651864265704666588390165784895096823943381731861967754378821493191647403369256122410325993399618819495802421940920608654626385171143399539593907882726793391450800755042304481628846299760128197688365016651908392430739403473996577438251491063824973176880922626330568858630384033151352937446304610854453179797316638310014757573927787370913619593695943674770181680637479817889067956731119345497106338406852404721559315833139179876953728452594700934425059273988901277536020891300972565531968460310151535171355066898362200837069743097890993601364361048115515250410760784301675614746714153596880725797725433329157900951910562667996374155819346553749196391304478673792940978807452852527286593319801219447473570355558928214055877485337591410348084375943938070357109074365729411595656844120518091716521555274304889771658270238841412158900141964051730996000991823020036982067994850578801999860051347838424821439357029178420040208771728502331919143831846887992181726100733938782520592375272948472500746973802017538740967164157026090099271656459071626256313352192216703213075678106920497086432268399044029103230077854253768143801905482473778702507905583320089364710521662357701190500821356516718426120359584928438777041317607701037869152779604664168357517629234493688890628379793771627801292878814988261461007927164214992399874552658425360442339042355138493253436089776910071534346499280")),
        &ec2048::Fp::decode_reduce(&bytes_from_str("55492738560608876554239162054512323561754862896485935448913731332251431746266688569391072583405979913811472640518588353419996450540603017237106342251543962878628715504906566333173599248540336291579175730537740637745958229517520945197499890722205207505860649721925478619508908849291494339772435496247632805988161113654720605415525283646326212545131345486491454545126935603418063090556261998136644024102798885194380209065462012629262170245942537760306903779382040058646713210912058993996878097359540514242894926457178220131319963611124034041439173528278771380172171390701514768830328396811975062570778500182570420574243102423161603068223088712342672646879299542375705997384152353221437971551429617284686208002184826311548455352979264453380968682243531642964335421178656358225064716709424932180632912804747727083632237499251389685073112213203191463247962337811626409414130145716599356556297080059063217375698150435525151724265729923922104361688208524142920149007249704473414963121018843254364175255508223343755996550333212585297669938928067397311884806734657384002025128589702929259154181780871547972184725297689211723872904032739139325892298067458530912761649868576341259455023892869626238472185819750468904447557062647764751815180816290978506407783534232317323938458293513675350499459709896420295883978495698522824018544388678770199347359217330156475365891923738539996640128643878451243759328323059637826838441753507297226987260933588052629364834454944063514418717304400599180190176399239348664014411671349305583773705262736027663471390184136765577022414829306536694047680356849452612644666759209070783460180822201091011573003959599408680494893150562771501998133525855586217661768596624405942149691683498442746142968563386174248402674780795775525954774919267832183292294555538271334113868918599845778433391488777127602410666300287214646681929644355294044802498273415709689370693")),
    );

    let omP = ec2048::Point {
        X: omPx,
        Y: omPy,
        Z: ec2048::Fq::ONE,
    };

    let omQx = ec2048::Fq::new(
        &ec2048::Fp::decode_reduce(&bytes_from_str("60167334375126827361808411984327659547159542320125283866821535422294604766216344316808820609755821872304496750698749390662872446242852467196276843014610281475999036178599637906586071101547665163577817567807237323432240224757530077974935863340646667925419053594419899882139490865807592919471950411669850892638454866688147571905135032079771988637101014636198075811341595691062822139154904273321830934906315232589328354574459755677262617927868354969985904985204274900095318080824626295361830666429462920548885651906305614701379409246097716918846801040645316314347210843306118685870001978824819927276866383838832257825018750876074476914320104364682516651488862107751747656490112196380985081515776968862032341410910985781439923131145277298785846103548235675891755463448506868523014993569465579596935818653982214638645634210238832265802333566922705381944471210855783433113797885541541275572799255707979793130581189857790166791734569939740376288985531336008875979630418628061974535713198529374550974829357889025848071645333717655951607672464319153246564715758615576600718765692558419296612629045582440951808978446056234389257950258627017295652538743197137601860267903925814502707751205665136624872365799766876676485300273156822051999834806813046410891331299245116003551860763755596023128037794736358235970192684057047674771132298185595539836175064339278412040997963835263413342417962806106266042392379209040641759194043553756095453608813211814140731604535544144330356995274561829057317066980341503212845476682065819224624289214959199635190159835959947219386988509280108167182228207012589978432661869312544985627838062488363782506924201681522580210743932213938361193686133971260883057398516662295026217638252689068085568432574062073064885285860283735178125218284227783483185216161907095587307015283379504628146333421132972927779000390970511407737523201237119888486020461613770252711812")),
        &ec2048::Fp::decode_reduce(&bytes_from_str("72925450266999710400983926598783383555581433470713867761782882437006797906211271182751325179670738124645398726639893620936569079734414319857661828793985551560067245251110886410836419525700643129802057528731085914969821284938357595269987706983401295492204956385480049223131889365465926310074381679283912047498223127490459850546740440509472511355929396420146810525603833898733652739400143793475947528097993695104046565434852805238456285007005038777313932908977340918286276064186839221162931681748129266662433580907434890204056192425097107422382740470299789069231392880022252713034805119624066570340044696656099855283667536802699982433887819879755598133204372503499666648020315720787895143043744116277702659140349707291941311178346990634965512411396171606706753075400228223735393914681754982512674475988298745562838661631331569582987381964308901585622311745743009748773876496339638049511916456466921752517515465383759916103794257057946167318742505883522242072807598693879449978108840362419674068155737867073223587293875338687740125478242544883632083508649749991650457649909394096417027468529233065385930884722203541914825893753164846502207382697160093892628782084646418909668456011024383534603108120096663105257562925096620924708798080664518150184893290464450988142943832017343353816918822916288772964807120292995584090844989824092391154093875067036278448291754658841234071388813998851862402402949738802801734902372272118044634943776382241691284513445327181476598575475468017974923250104161977886880246630973757969594672281889375290952270347604036983068826967788152294889763955746094030689136791278196635399858947354763091584106036262842217568182914672266777806847262559788348814143664264130928190213989106831803333348924097077088456302783491036607882411333466269017366772240016598127797791437288325076444026447303272079706297138563883946414180275029823107686241544685793221422360")),
    );
    let omQy = ec2048::Fq::new(
        &ec2048::Fp::decode_reduce(&bytes_from_str("58876628373653828149683425306311124695315605431705351055446877407260071947343918168280090081033552193006942940393528746465579261722486160883279347535529246315186663027870499611409211544454504443017514060230442137185462993103427159538802585357244887125078656227798668165053579255959683441478431950513290082914856856935120701216975952011330484887421149801528436798266462659177196684643688682191210358414058248544416063332824002964678469574445530084618297329666295399505386151749867694450045067580463991109885104880007418193842716812018434352890548402678382480774208332334932853025995882666660985863035298050308278097081629611176253727654431698693141665592474201844781088442656166320693643591392460109632645044330011039765542711548355736435161387125673052719192564625850801339655561214677492533961153455634846393231367008286607075533798107798225605067372367566277929758690279815733870400393102429952052248885758767845926180383518715577819057698757013426237123046619338535813890943312296363319933298770650187034082265782317384248127496958181682187259310265749801385134955299637201946878663467890431838565671841742480502822909147771651935694713377048457993567001214010095295731091453418199170648886682463216015251722645897639718215883938193784383594951199709061522256332646496266874081923639305040481502383653614320169828428118902877190672055530685948100850378464659681827983991421320318879166810731047224303196161337074417537017026186238718489898649747375390503867817838934559044344163218571364498765819927123468283672073192325809027633703149123007155107164173006437832619858395323925282494464557108008528461297776840303363109993626739452669181247716796509408349096458364861255458961266271689463090164922843762370371571742677266913573851479223731241736444684563402127702626838761649939767591532949835673861065307348408091276666618569404510960027150674551810157817933043864897280324")),
        &ec2048::Fp::decode_reduce(&bytes_from_str("53581829144876123011865952238323346880172740498919302251327227375078239693518478819733176123985812327607707158279238414509983703509993167832524509847915234216989818980995545734842551371587643090827275669838403058726905316261771869419708493603663659682447897806686082721892220315408369471203138418865172873897932393958528500993060613862748487155345561287352567344775720373299616201888762833177324396726017634459919939329864946536490481228113421806494376886218061691660541012080958620458352799094635775728578874783050819078218434952744858056916319859532850235761005400583292938201144516246295516460317127715473796809647115673913513826364640681640339796863576928966051620849955675947737842055801462269981529488551926251107414415987658932557913121311960810204734452197788265834026293616722123234028165986169333052169994960929938230075471868920956454583618185018424480347521479173325053352727345802105289047489481767101361639690558944361375617782698789453133414178352936806158370713519740393854282296301952725648134069901621328893360753516883201647136577676140872729162734265060635224262440779718920056692078702350706711715692387604682376659678880851343485639042677064935278612579543890448578487391880721712547971462298194092943390669047466543713488021877270885857315446516373403259182589455305071969770698609673357432613582878009425716883573376422018287543338064784055051311898908642331281031671540827256737019169445715962280819226817083703337654083760462123266403129259484637182159279135958914856074435294319652045273931937841005018840612116635455766808300761807683118049129648967745930839932645580392095594462692714508066919478864698900777621320824151388151825652105612128949584525621148092823175999152384858511183399373953665900948563721251265703041778680610164343025671387708587247449994187127037322005564719882759699123278987935803836697173451759446845663373603439977415704591")),
    );

    let omQ = ec2048::Point {
        X: omQx,
        Y: omQy,
        Z: ec2048::Fq::ONE,
    };

    let gen_denom = 2.big(); // quadratic order is generated by 1 and (1 + theta)/gen_denom.
    let field_disc = -11.big();
    let order_conductor =
        "54202487423055182229739851875706217154843782216540115620812461721806676509771792265628238429421847719258227664339170315631352698627194333143007927140070137683856481433479301878628393241905318205609340227247924926669718028206635030394871326673751750223521571093487565921778262905569748425750815058695283470967".big();
    let quadratic_order =
        QuadraticOrder::new(field_disc.clone(), gen_denom, order_conductor.clone());

    let omega = QuadraticOrderEl::new(
        "5273342158273318374960564440109947214109942313468337484412343641935818055284268793032876363831779632368719015573403834651377315625055978608624706293753826070541148269323696053705291142121569170122263990510369089314645084363017973953048525472803920556577523620845351914923170658962276530465117500875186882457649".big(),
        1.big(),
        2.big(),
        quadratic_order.clone(),
    );

    let beta = QuadraticOrderEl::new(
        "5111995753709990008765789309058735579044489509154994821977523081524334947189582534048445061507963457320178730910402201587502815063798178563811819353086541447953945023914914829898008662487429073688297777817501053805170104473306985546276690873476462387649785912843664893847972605846534137888420741293205796583107".big(),
        0.big(),
        1.big(),
        quadratic_order.clone(),
    );

    let e = 6223; // TODO
    let two_dim = ec2048::TwoDim::new(EA, omega, beta, P, Q, omP, omQ, e);
    let klapoti = ec2048::Klapoti::new(quadratic_order, two_dim);

    let ideal = klapoti.secret();
    let strategy: [usize; 6218] = [2071, 1597, 987, 610, 377, 233, 144, 89, 55, 34, 21, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 377, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 610, 377, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 610, 474, 377, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 144, 97, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 34, 21, 13, 8, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 34, 21, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 13, 8, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1];

    klapoti.act(ideal, 1050, strategy.to_vec());
}




#[cfg(test)]
mod tests {
    use super::{params64, params128, params256, params512, params768, params1024, params1536, params2048};
    use crate::util::core_cycles;

    #[test]
    fn params64_test() {
        params64();
    }

    #[test]
    fn params128_test() {
        params128();
    }

    #[test]
    fn params256_test() {
        params256();
    }

    #[test]
    fn params512_test() {
        params512();
    }

    #[test]
    fn params768_test() {
        params768();
    }

    #[test]
    fn params1024_test() {
        params1024();
    }

    #[test]
    fn params1536_test() {
        params1536();
    }

    #[test]
    fn params2048_test() {
        params2048();
    }


    #[test]
    fn cycles_test() {
        let mut tt = [0; 100];
        for i in 0..100 {
            let begin = core_cycles();
            params512();
            let end = core_cycles();
            tt[i] = end.wrapping_sub(begin);
        }
        tt.sort();
        println!(
            "Cycles:     {:?}",
            tt
        );
    }
}
